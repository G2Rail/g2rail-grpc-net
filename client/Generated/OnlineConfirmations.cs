// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/OnlineConfirmations.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace G2Rail.Protobuf {

  /// <summary>Holder for reflection information generated from Protos/OnlineConfirmations.proto</summary>
  public static partial class OnlineConfirmationsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/OnlineConfirmations.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OnlineConfirmationsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBQcm90b3MvT25saW5lQ29uZmlybWF0aW9ucy5wcm90bxIGZzJyYWlsGhNQ",
            "cm90b3MvQ29tbW9uLnByb3RvIiIKDkNvbmZpcm1SZXF1ZXN0EhAKCG9yZGVy",
            "X2lkGAEgASgJIjgKI09ubGluZUNvbmZpcm1hdGlvbkFzeW5jUXVlcnlSZXF1",
            "ZXN0EhEKCWFzeW5jX2tleRgBIAEoCSLkAgoaT25saW5lQ29uZmlybWF0aW9u",
            "UmVzcG9uc2USCgoCaWQYASABKAkSFQoNY29uZmlybV9hZ2FpbhgDIAEoCRIc",
            "CgVvcmRlchgEIAEoCzINLmcycmFpbC5PcmRlchIjCgx0aWNrZXRfcHJpY2UY",
            "CCABKAsyDS5nMnJhaWwuUHJpY2USJAoNcGF5bWVudF9wcmljZRgJIAEoCzIN",
            "LmcycmFpbC5QcmljZRIlCg5jaGFyZ2luZ19wcmljZRgKIAEoCzINLmcycmFp",
            "bC5QcmljZRIkCg1yZWJhdGVfYW1vdW50GAsgASgLMg0uZzJyYWlsLlByaWNl",
            "EiQKB3JlY29yZHMYDyADKAsyEy5nMnJhaWwuUHJpY2VEZXRhaWwSDwoHbG9h",
            "ZGluZxgQIAEoCBIbChNvZmZsaW5lX2Z1bGZpbGxtZW50GBEgASgIEhkKEXRy",
            "YWluX2Rlc2NyaXB0aW9uGBIgASgJIsECCgVPcmRlchIKCgJpZBgBIAEoCRIg",
            "CgdyYWlsd2F5GAIgASgLMg8uZzJyYWlsLlJhaWx3YXkSGwoTb2ZmbGluZV9m",
            "dWxmaWxsbWVudBgDIAEoCBIZChF0cmFpbl9kZXNjcmlwdGlvbhgEIAEoCRId",
            "CgRmcm9tGAUgASgLMg8uZzJyYWlsLlN0YXRpb24SGwoCdG8YBiABKAsyDy5n",
            "MnJhaWwuU3RhdGlvbhIRCglkZXBhcnR1cmUYByABKAkSDwoHYXJyaXZhbBgI",
            "IAEoCRILCgNQTlIYCSABKAkSHQoGdHJhaW5zGAwgAygLMg0uZzJyYWlsLlRy",
            "YWluEiUKCnBhc3NlbmdlcnMYDSADKAsyES5nMnJhaWwuUGFzc2VuZ2VyEh8K",
            "B3RpY2tldHMYDiADKAsyDi5nMnJhaWwuVGlja2V0MsMBChNPbmxpbmVDb25m",
            "aXJtYXRpb25zEjsKB0NvbmZpcm0SFi5nMnJhaWwuQ29uZmlybVJlcXVlc3Qa",
            "GC5nMnJhaWwuQXN5bmNLZXlSZXNwb25zZRJvChxRdWVyeUFzeW5jT25saW5l",
            "Q29uZmlybWF0aW9uEisuZzJyYWlsLk9ubGluZUNvbmZpcm1hdGlvbkFzeW5j",
            "UXVlcnlSZXF1ZXN0GiIuZzJyYWlsLk9ubGluZUNvbmZpcm1hdGlvblJlc3Bv",
            "bnNlQkYKDmlvLmdycGMuZzJyYWlsQhhPbmxpbmVDb25maXJtYXRpb25zUHJv",
            "dG9QAVoGZzJyYWlsqgIPRzJSYWlsLlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::G2Rail.Protobuf.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.ConfirmRequest), global::G2Rail.Protobuf.ConfirmRequest.Parser, new[]{ "OrderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.OnlineConfirmationAsyncQueryRequest), global::G2Rail.Protobuf.OnlineConfirmationAsyncQueryRequest.Parser, new[]{ "AsyncKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.OnlineConfirmationResponse), global::G2Rail.Protobuf.OnlineConfirmationResponse.Parser, new[]{ "Id", "ConfirmAgain", "Order", "TicketPrice", "PaymentPrice", "ChargingPrice", "RebateAmount", "Records", "Loading", "OfflineFulfillment", "TrainDescription" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Order), global::G2Rail.Protobuf.Order.Parser, new[]{ "Id", "Railway", "OfflineFulfillment", "TrainDescription", "From", "To", "Departure", "Arrival", "PNR", "Trains", "Passengers", "Tickets" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ConfirmRequest : pb::IMessage<ConfirmRequest> {
    private static readonly pb::MessageParser<ConfirmRequest> _parser = new pb::MessageParser<ConfirmRequest>(() => new ConfirmRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfirmRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineConfirmationsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmRequest(ConfirmRequest other) : this() {
      orderId_ = other.orderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfirmRequest Clone() {
      return new ConfirmRequest(this);
    }

    /// <summary>Field number for the "order_id" field.</summary>
    public const int OrderIdFieldNumber = 1;
    private string orderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderId {
      get { return orderId_; }
      set {
        orderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfirmRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfirmRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OrderId != other.OrderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OrderId.Length != 0) hash ^= OrderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OrderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OrderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OrderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfirmRequest other) {
      if (other == null) {
        return;
      }
      if (other.OrderId.Length != 0) {
        OrderId = other.OrderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OrderId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnlineConfirmationAsyncQueryRequest : pb::IMessage<OnlineConfirmationAsyncQueryRequest> {
    private static readonly pb::MessageParser<OnlineConfirmationAsyncQueryRequest> _parser = new pb::MessageParser<OnlineConfirmationAsyncQueryRequest>(() => new OnlineConfirmationAsyncQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlineConfirmationAsyncQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineConfirmationsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineConfirmationAsyncQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineConfirmationAsyncQueryRequest(OnlineConfirmationAsyncQueryRequest other) : this() {
      asyncKey_ = other.asyncKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineConfirmationAsyncQueryRequest Clone() {
      return new OnlineConfirmationAsyncQueryRequest(this);
    }

    /// <summary>Field number for the "async_key" field.</summary>
    public const int AsyncKeyFieldNumber = 1;
    private string asyncKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AsyncKey {
      get { return asyncKey_; }
      set {
        asyncKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlineConfirmationAsyncQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlineConfirmationAsyncQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AsyncKey != other.AsyncKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AsyncKey.Length != 0) hash ^= AsyncKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AsyncKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AsyncKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AsyncKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AsyncKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlineConfirmationAsyncQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.AsyncKey.Length != 0) {
        AsyncKey = other.AsyncKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AsyncKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnlineConfirmationResponse : pb::IMessage<OnlineConfirmationResponse> {
    private static readonly pb::MessageParser<OnlineConfirmationResponse> _parser = new pb::MessageParser<OnlineConfirmationResponse>(() => new OnlineConfirmationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlineConfirmationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineConfirmationsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineConfirmationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineConfirmationResponse(OnlineConfirmationResponse other) : this() {
      id_ = other.id_;
      confirmAgain_ = other.confirmAgain_;
      order_ = other.order_ != null ? other.order_.Clone() : null;
      ticketPrice_ = other.ticketPrice_ != null ? other.ticketPrice_.Clone() : null;
      paymentPrice_ = other.paymentPrice_ != null ? other.paymentPrice_.Clone() : null;
      chargingPrice_ = other.chargingPrice_ != null ? other.chargingPrice_.Clone() : null;
      rebateAmount_ = other.rebateAmount_ != null ? other.rebateAmount_.Clone() : null;
      records_ = other.records_.Clone();
      loading_ = other.loading_;
      offlineFulfillment_ = other.offlineFulfillment_;
      trainDescription_ = other.trainDescription_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineConfirmationResponse Clone() {
      return new OnlineConfirmationResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "confirm_again" field.</summary>
    public const int ConfirmAgainFieldNumber = 3;
    private string confirmAgain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmAgain {
      get { return confirmAgain_; }
      set {
        confirmAgain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 4;
    private global::G2Rail.Protobuf.Order order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Order Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "ticket_price" field.</summary>
    public const int TicketPriceFieldNumber = 8;
    private global::G2Rail.Protobuf.Price ticketPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price TicketPrice {
      get { return ticketPrice_; }
      set {
        ticketPrice_ = value;
      }
    }

    /// <summary>Field number for the "payment_price" field.</summary>
    public const int PaymentPriceFieldNumber = 9;
    private global::G2Rail.Protobuf.Price paymentPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price PaymentPrice {
      get { return paymentPrice_; }
      set {
        paymentPrice_ = value;
      }
    }

    /// <summary>Field number for the "charging_price" field.</summary>
    public const int ChargingPriceFieldNumber = 10;
    private global::G2Rail.Protobuf.Price chargingPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price ChargingPrice {
      get { return chargingPrice_; }
      set {
        chargingPrice_ = value;
      }
    }

    /// <summary>Field number for the "rebate_amount" field.</summary>
    public const int RebateAmountFieldNumber = 11;
    private global::G2Rail.Protobuf.Price rebateAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price RebateAmount {
      get { return rebateAmount_; }
      set {
        rebateAmount_ = value;
      }
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.PriceDetail> _repeated_records_codec
        = pb::FieldCodec.ForMessage(122, global::G2Rail.Protobuf.PriceDetail.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.PriceDetail> records_ = new pbc::RepeatedField<global::G2Rail.Protobuf.PriceDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.PriceDetail> Records {
      get { return records_; }
    }

    /// <summary>Field number for the "loading" field.</summary>
    public const int LoadingFieldNumber = 16;
    private bool loading_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Loading {
      get { return loading_; }
      set {
        loading_ = value;
      }
    }

    /// <summary>Field number for the "offline_fulfillment" field.</summary>
    public const int OfflineFulfillmentFieldNumber = 17;
    private bool offlineFulfillment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OfflineFulfillment {
      get { return offlineFulfillment_; }
      set {
        offlineFulfillment_ = value;
      }
    }

    /// <summary>Field number for the "train_description" field.</summary>
    public const int TrainDescriptionFieldNumber = 18;
    private string trainDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrainDescription {
      get { return trainDescription_; }
      set {
        trainDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlineConfirmationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlineConfirmationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ConfirmAgain != other.ConfirmAgain) return false;
      if (!object.Equals(Order, other.Order)) return false;
      if (!object.Equals(TicketPrice, other.TicketPrice)) return false;
      if (!object.Equals(PaymentPrice, other.PaymentPrice)) return false;
      if (!object.Equals(ChargingPrice, other.ChargingPrice)) return false;
      if (!object.Equals(RebateAmount, other.RebateAmount)) return false;
      if(!records_.Equals(other.records_)) return false;
      if (Loading != other.Loading) return false;
      if (OfflineFulfillment != other.OfflineFulfillment) return false;
      if (TrainDescription != other.TrainDescription) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ConfirmAgain.Length != 0) hash ^= ConfirmAgain.GetHashCode();
      if (order_ != null) hash ^= Order.GetHashCode();
      if (ticketPrice_ != null) hash ^= TicketPrice.GetHashCode();
      if (paymentPrice_ != null) hash ^= PaymentPrice.GetHashCode();
      if (chargingPrice_ != null) hash ^= ChargingPrice.GetHashCode();
      if (rebateAmount_ != null) hash ^= RebateAmount.GetHashCode();
      hash ^= records_.GetHashCode();
      if (Loading != false) hash ^= Loading.GetHashCode();
      if (OfflineFulfillment != false) hash ^= OfflineFulfillment.GetHashCode();
      if (TrainDescription.Length != 0) hash ^= TrainDescription.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ConfirmAgain.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ConfirmAgain);
      }
      if (order_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Order);
      }
      if (ticketPrice_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(TicketPrice);
      }
      if (paymentPrice_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(PaymentPrice);
      }
      if (chargingPrice_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ChargingPrice);
      }
      if (rebateAmount_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RebateAmount);
      }
      records_.WriteTo(output, _repeated_records_codec);
      if (Loading != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(Loading);
      }
      if (OfflineFulfillment != false) {
        output.WriteRawTag(136, 1);
        output.WriteBool(OfflineFulfillment);
      }
      if (TrainDescription.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(TrainDescription);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ConfirmAgain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfirmAgain);
      }
      if (order_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Order);
      }
      if (ticketPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TicketPrice);
      }
      if (paymentPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PaymentPrice);
      }
      if (chargingPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChargingPrice);
      }
      if (rebateAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RebateAmount);
      }
      size += records_.CalculateSize(_repeated_records_codec);
      if (Loading != false) {
        size += 2 + 1;
      }
      if (OfflineFulfillment != false) {
        size += 2 + 1;
      }
      if (TrainDescription.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TrainDescription);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlineConfirmationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ConfirmAgain.Length != 0) {
        ConfirmAgain = other.ConfirmAgain;
      }
      if (other.order_ != null) {
        if (order_ == null) {
          Order = new global::G2Rail.Protobuf.Order();
        }
        Order.MergeFrom(other.Order);
      }
      if (other.ticketPrice_ != null) {
        if (ticketPrice_ == null) {
          TicketPrice = new global::G2Rail.Protobuf.Price();
        }
        TicketPrice.MergeFrom(other.TicketPrice);
      }
      if (other.paymentPrice_ != null) {
        if (paymentPrice_ == null) {
          PaymentPrice = new global::G2Rail.Protobuf.Price();
        }
        PaymentPrice.MergeFrom(other.PaymentPrice);
      }
      if (other.chargingPrice_ != null) {
        if (chargingPrice_ == null) {
          ChargingPrice = new global::G2Rail.Protobuf.Price();
        }
        ChargingPrice.MergeFrom(other.ChargingPrice);
      }
      if (other.rebateAmount_ != null) {
        if (rebateAmount_ == null) {
          RebateAmount = new global::G2Rail.Protobuf.Price();
        }
        RebateAmount.MergeFrom(other.RebateAmount);
      }
      records_.Add(other.records_);
      if (other.Loading != false) {
        Loading = other.Loading;
      }
      if (other.OfflineFulfillment != false) {
        OfflineFulfillment = other.OfflineFulfillment;
      }
      if (other.TrainDescription.Length != 0) {
        TrainDescription = other.TrainDescription;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            ConfirmAgain = input.ReadString();
            break;
          }
          case 34: {
            if (order_ == null) {
              Order = new global::G2Rail.Protobuf.Order();
            }
            input.ReadMessage(Order);
            break;
          }
          case 66: {
            if (ticketPrice_ == null) {
              TicketPrice = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(TicketPrice);
            break;
          }
          case 74: {
            if (paymentPrice_ == null) {
              PaymentPrice = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(PaymentPrice);
            break;
          }
          case 82: {
            if (chargingPrice_ == null) {
              ChargingPrice = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(ChargingPrice);
            break;
          }
          case 90: {
            if (rebateAmount_ == null) {
              RebateAmount = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(RebateAmount);
            break;
          }
          case 122: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
          case 128: {
            Loading = input.ReadBool();
            break;
          }
          case 136: {
            OfflineFulfillment = input.ReadBool();
            break;
          }
          case 146: {
            TrainDescription = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Order : pb::IMessage<Order> {
    private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Order> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineConfirmationsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order(Order other) : this() {
      id_ = other.id_;
      railway_ = other.railway_ != null ? other.railway_.Clone() : null;
      offlineFulfillment_ = other.offlineFulfillment_;
      trainDescription_ = other.trainDescription_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      departure_ = other.departure_;
      arrival_ = other.arrival_;
      pNR_ = other.pNR_;
      trains_ = other.trains_.Clone();
      passengers_ = other.passengers_.Clone();
      tickets_ = other.tickets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Order Clone() {
      return new Order(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "railway" field.</summary>
    public const int RailwayFieldNumber = 2;
    private global::G2Rail.Protobuf.Railway railway_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Railway Railway {
      get { return railway_; }
      set {
        railway_ = value;
      }
    }

    /// <summary>Field number for the "offline_fulfillment" field.</summary>
    public const int OfflineFulfillmentFieldNumber = 3;
    private bool offlineFulfillment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OfflineFulfillment {
      get { return offlineFulfillment_; }
      set {
        offlineFulfillment_ = value;
      }
    }

    /// <summary>Field number for the "train_description" field.</summary>
    public const int TrainDescriptionFieldNumber = 4;
    private string trainDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrainDescription {
      get { return trainDescription_; }
      set {
        trainDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 5;
    private global::G2Rail.Protobuf.Station from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Station From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 6;
    private global::G2Rail.Protobuf.Station to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Station To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "departure" field.</summary>
    public const int DepartureFieldNumber = 7;
    private string departure_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Departure {
      get { return departure_; }
      set {
        departure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arrival" field.</summary>
    public const int ArrivalFieldNumber = 8;
    private string arrival_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Arrival {
      get { return arrival_; }
      set {
        arrival_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PNR" field.</summary>
    public const int PNRFieldNumber = 9;
    private string pNR_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PNR {
      get { return pNR_; }
      set {
        pNR_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trains" field.</summary>
    public const int TrainsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Train> _repeated_trains_codec
        = pb::FieldCodec.ForMessage(98, global::G2Rail.Protobuf.Train.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Train> trains_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Train>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Train> Trains {
      get { return trains_; }
    }

    /// <summary>Field number for the "passengers" field.</summary>
    public const int PassengersFieldNumber = 13;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Passenger> _repeated_passengers_codec
        = pb::FieldCodec.ForMessage(106, global::G2Rail.Protobuf.Passenger.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Passenger> passengers_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Passenger>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Passenger> Passengers {
      get { return passengers_; }
    }

    /// <summary>Field number for the "tickets" field.</summary>
    public const int TicketsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Ticket> _repeated_tickets_codec
        = pb::FieldCodec.ForMessage(114, global::G2Rail.Protobuf.Ticket.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Ticket> tickets_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Ticket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Ticket> Tickets {
      get { return tickets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Order);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Order other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Railway, other.Railway)) return false;
      if (OfflineFulfillment != other.OfflineFulfillment) return false;
      if (TrainDescription != other.TrainDescription) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (Departure != other.Departure) return false;
      if (Arrival != other.Arrival) return false;
      if (PNR != other.PNR) return false;
      if(!trains_.Equals(other.trains_)) return false;
      if(!passengers_.Equals(other.passengers_)) return false;
      if(!tickets_.Equals(other.tickets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (railway_ != null) hash ^= Railway.GetHashCode();
      if (OfflineFulfillment != false) hash ^= OfflineFulfillment.GetHashCode();
      if (TrainDescription.Length != 0) hash ^= TrainDescription.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (Departure.Length != 0) hash ^= Departure.GetHashCode();
      if (Arrival.Length != 0) hash ^= Arrival.GetHashCode();
      if (PNR.Length != 0) hash ^= PNR.GetHashCode();
      hash ^= trains_.GetHashCode();
      hash ^= passengers_.GetHashCode();
      hash ^= tickets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (railway_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Railway);
      }
      if (OfflineFulfillment != false) {
        output.WriteRawTag(24);
        output.WriteBool(OfflineFulfillment);
      }
      if (TrainDescription.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TrainDescription);
      }
      if (from_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(To);
      }
      if (Departure.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Departure);
      }
      if (Arrival.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Arrival);
      }
      if (PNR.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(PNR);
      }
      trains_.WriteTo(output, _repeated_trains_codec);
      passengers_.WriteTo(output, _repeated_passengers_codec);
      tickets_.WriteTo(output, _repeated_tickets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (railway_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Railway);
      }
      if (OfflineFulfillment != false) {
        size += 1 + 1;
      }
      if (TrainDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrainDescription);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Departure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Departure);
      }
      if (Arrival.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Arrival);
      }
      if (PNR.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PNR);
      }
      size += trains_.CalculateSize(_repeated_trains_codec);
      size += passengers_.CalculateSize(_repeated_passengers_codec);
      size += tickets_.CalculateSize(_repeated_tickets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Order other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.railway_ != null) {
        if (railway_ == null) {
          Railway = new global::G2Rail.Protobuf.Railway();
        }
        Railway.MergeFrom(other.Railway);
      }
      if (other.OfflineFulfillment != false) {
        OfflineFulfillment = other.OfflineFulfillment;
      }
      if (other.TrainDescription.Length != 0) {
        TrainDescription = other.TrainDescription;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::G2Rail.Protobuf.Station();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::G2Rail.Protobuf.Station();
        }
        To.MergeFrom(other.To);
      }
      if (other.Departure.Length != 0) {
        Departure = other.Departure;
      }
      if (other.Arrival.Length != 0) {
        Arrival = other.Arrival;
      }
      if (other.PNR.Length != 0) {
        PNR = other.PNR;
      }
      trains_.Add(other.trains_);
      passengers_.Add(other.passengers_);
      tickets_.Add(other.tickets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (railway_ == null) {
              Railway = new global::G2Rail.Protobuf.Railway();
            }
            input.ReadMessage(Railway);
            break;
          }
          case 24: {
            OfflineFulfillment = input.ReadBool();
            break;
          }
          case 34: {
            TrainDescription = input.ReadString();
            break;
          }
          case 42: {
            if (from_ == null) {
              From = new global::G2Rail.Protobuf.Station();
            }
            input.ReadMessage(From);
            break;
          }
          case 50: {
            if (to_ == null) {
              To = new global::G2Rail.Protobuf.Station();
            }
            input.ReadMessage(To);
            break;
          }
          case 58: {
            Departure = input.ReadString();
            break;
          }
          case 66: {
            Arrival = input.ReadString();
            break;
          }
          case 74: {
            PNR = input.ReadString();
            break;
          }
          case 98: {
            trains_.AddEntriesFrom(input, _repeated_trains_codec);
            break;
          }
          case 106: {
            passengers_.AddEntriesFrom(input, _repeated_passengers_codec);
            break;
          }
          case 114: {
            tickets_.AddEntriesFrom(input, _repeated_tickets_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
