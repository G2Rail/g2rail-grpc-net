// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/OnlineOrders.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace G2Rail.Protobuf {

  /// <summary>Holder for reflection information generated from Protos/OnlineOrders.proto</summary>
  public static partial class OnlineOrdersReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/OnlineOrders.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OnlineOrdersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChlQcm90b3MvT25saW5lT3JkZXJzLnByb3RvEgZnMnJhaWwaE1Byb3Rvcy9D",
            "b21tb24ucHJvdG8iXQoLQm9va1JlcXVlc3QSFQoNc2VhdF9yZXNlcnZlZBgB",
            "IAEoCBIQCghzZWN0aW9ucxgCIAMoCRIlCgpwYXNzZW5nZXJzGAMgAygLMhEu",
            "ZzJyYWlsLlBhc3NlbmdlciLLAQoJUGFzc2VuZ2VyEigKBmdlbmRlchgBIAEo",
            "DjIYLmcycmFpbC5QYXNzZW5nZXIuR2VuZGVyEgoKAmlkGAggASgJEg0KBXBo",
            "b25lGAIgASgJEhEKCWxhc3RfbmFtZRgDIAEoCRISCgpmaXJzdF9uYW1lGAQg",
            "ASgJEhEKCWJpcnRoZGF0ZRgFIAEoCRINCgVlbWFpbBgGIAEoCRIQCghwYXNz",
            "cG9ydBgHIAEoCSIeCgZHZW5kZXISCAoEbWFsZRAAEgoKBmZlbWFsZRABIjEK",
            "HE9ubGluZU9yZGVyQXN5bmNRdWVyeVJlcXVlc3QSEQoJYXN5bmNfa2V5GAEg",
            "ASgJIpEEChNPbmxpbmVPcmRlclJlc3BvbnNlEgoKAmlkGAEgASgJEg8KB2xv",
            "YWRpbmcYDiABKAgSGwoTb2ZmbGluZV9mdWxmaWxsbWVudBgPIAEoCBIZChF0",
            "cmFpbl9kZXNjcmlwdGlvbhgQIAEoCRIgCgdyYWlsd2F5GAIgASgLMg8uZzJy",
            "YWlsLlJhaWx3YXkSHQoEZnJvbRgDIAEoCzIPLmcycmFpbC5TdGF0aW9uEhsK",
            "AnRvGAQgASgLMg8uZzJyYWlsLlN0YXRpb24SEQoJZGVwYXJ0dXJlGAUgASgJ",
            "Eg8KB2Fycml2YWwYBiABKAkSIwoMdGlja2V0X3ByaWNlGAcgASgLMg0uZzJy",
            "YWlsLlByaWNlEiQKDXBheW1lbnRfcHJpY2UYCCABKAsyDS5nMnJhaWwuUHJp",
            "Y2USJQoOY2hhcmdpbmdfcHJpY2UYCSABKAsyDS5nMnJhaWwuUHJpY2USJAoN",
            "cmViYXRlX2Ftb3VudBgKIAEoCzINLmcycmFpbC5QcmljZRIdCgZ0cmFpbnMY",
            "ESADKAsyDS5nMnJhaWwuVHJhaW4SJQoKcGFzc2VuZ2VycxgLIAMoCzIRLmcy",
            "cmFpbC5QYXNzZW5nZXISHwoHdGlja2V0cxgMIAMoCzIOLmcycmFpbC5UaWNr",
            "ZXQSJAoHcmVjb3JkcxgNIAMoCzITLmcycmFpbC5QcmljZURldGFpbCJuCgZU",
            "aWNrZXQSCgoCaWQYASABKAkSHQoEZnJvbRgCIAEoCzIPLmcycmFpbC5TdGF0",
            "aW9uEhsKAnRvGAMgASgLMg8uZzJyYWlsLlN0YXRpb24SHAoFcHJpY2UYBCAB",
            "KAsyDS5nMnJhaWwuUHJpY2UiaAoLUHJpY2VEZXRhaWwSCgoCaWQYASABKAkS",
            "HQoGYW1vdW50GAIgASgLMg0uZzJyYWlsLlByaWNlEgwKBHR5cGUYAyABKAkS",
            "EAoIY2F0ZWdvcnkYBCABKAkSDgoGdGFyZ2V0GAUgASgJMqEBCgxPbmxpbmVP",
            "cmRlcnMSNQoEQm9vaxITLmcycmFpbC5Cb29rUmVxdWVzdBoYLmcycmFpbC5B",
            "c3luY0tleVJlc3BvbnNlEloKFVF1ZXJ5QXN5bmNPbmxpbmVPcmRlchIkLmcy",
            "cmFpbC5PbmxpbmVPcmRlckFzeW5jUXVlcnlSZXF1ZXN0GhsuZzJyYWlsLk9u",
            "bGluZU9yZGVyUmVzcG9uc2VCPwoOaW8uZ3JwYy5nMnJhaWxCEU9ubGluZU9y",
            "ZGVyc1Byb3RvUAFaBmcycmFpbKoCD0cyUmFpbC5Qcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::G2Rail.Protobuf.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.BookRequest), global::G2Rail.Protobuf.BookRequest.Parser, new[]{ "SeatReserved", "Sections", "Passengers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Passenger), global::G2Rail.Protobuf.Passenger.Parser, new[]{ "Gender", "Id", "Phone", "LastName", "FirstName", "Birthdate", "Email", "Passport" }, null, new[]{ typeof(global::G2Rail.Protobuf.Passenger.Types.Gender) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest), global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest.Parser, new[]{ "AsyncKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.OnlineOrderResponse), global::G2Rail.Protobuf.OnlineOrderResponse.Parser, new[]{ "Id", "Loading", "OfflineFulfillment", "TrainDescription", "Railway", "From", "To", "Departure", "Arrival", "TicketPrice", "PaymentPrice", "ChargingPrice", "RebateAmount", "Trains", "Passengers", "Tickets", "Records" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Ticket), global::G2Rail.Protobuf.Ticket.Parser, new[]{ "Id", "From", "To", "Price" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.PriceDetail), global::G2Rail.Protobuf.PriceDetail.Parser, new[]{ "Id", "Amount", "Type", "Category", "Target" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BookRequest : pb::IMessage<BookRequest> {
    private static readonly pb::MessageParser<BookRequest> _parser = new pb::MessageParser<BookRequest>(() => new BookRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BookRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineOrdersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookRequest(BookRequest other) : this() {
      seatReserved_ = other.seatReserved_;
      sections_ = other.sections_.Clone();
      passengers_ = other.passengers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BookRequest Clone() {
      return new BookRequest(this);
    }

    /// <summary>Field number for the "seat_reserved" field.</summary>
    public const int SeatReservedFieldNumber = 1;
    private bool seatReserved_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SeatReserved {
      get { return seatReserved_; }
      set {
        seatReserved_ = value;
      }
    }

    /// <summary>Field number for the "sections" field.</summary>
    public const int SectionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_sections_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> sections_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Sections {
      get { return sections_; }
    }

    /// <summary>Field number for the "passengers" field.</summary>
    public const int PassengersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Passenger> _repeated_passengers_codec
        = pb::FieldCodec.ForMessage(26, global::G2Rail.Protobuf.Passenger.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Passenger> passengers_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Passenger>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Passenger> Passengers {
      get { return passengers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BookRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BookRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SeatReserved != other.SeatReserved) return false;
      if(!sections_.Equals(other.sections_)) return false;
      if(!passengers_.Equals(other.passengers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SeatReserved != false) hash ^= SeatReserved.GetHashCode();
      hash ^= sections_.GetHashCode();
      hash ^= passengers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SeatReserved != false) {
        output.WriteRawTag(8);
        output.WriteBool(SeatReserved);
      }
      sections_.WriteTo(output, _repeated_sections_codec);
      passengers_.WriteTo(output, _repeated_passengers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SeatReserved != false) {
        size += 1 + 1;
      }
      size += sections_.CalculateSize(_repeated_sections_codec);
      size += passengers_.CalculateSize(_repeated_passengers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BookRequest other) {
      if (other == null) {
        return;
      }
      if (other.SeatReserved != false) {
        SeatReserved = other.SeatReserved;
      }
      sections_.Add(other.sections_);
      passengers_.Add(other.passengers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SeatReserved = input.ReadBool();
            break;
          }
          case 18: {
            sections_.AddEntriesFrom(input, _repeated_sections_codec);
            break;
          }
          case 26: {
            passengers_.AddEntriesFrom(input, _repeated_passengers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Passenger : pb::IMessage<Passenger> {
    private static readonly pb::MessageParser<Passenger> _parser = new pb::MessageParser<Passenger>(() => new Passenger());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Passenger> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineOrdersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Passenger() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Passenger(Passenger other) : this() {
      gender_ = other.gender_;
      id_ = other.id_;
      phone_ = other.phone_;
      lastName_ = other.lastName_;
      firstName_ = other.firstName_;
      birthdate_ = other.birthdate_;
      email_ = other.email_;
      passport_ = other.passport_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Passenger Clone() {
      return new Passenger(this);
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 1;
    private global::G2Rail.Protobuf.Passenger.Types.Gender gender_ = global::G2Rail.Protobuf.Passenger.Types.Gender.Male;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Passenger.Types.Gender Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 8;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 2;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_name" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 4;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "birthdate" field.</summary>
    public const int BirthdateFieldNumber = 5;
    private string birthdate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Birthdate {
      get { return birthdate_; }
      set {
        birthdate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 6;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "passport" field.</summary>
    public const int PassportFieldNumber = 7;
    private string passport_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Passport {
      get { return passport_; }
      set {
        passport_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Passenger);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Passenger other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gender != other.Gender) return false;
      if (Id != other.Id) return false;
      if (Phone != other.Phone) return false;
      if (LastName != other.LastName) return false;
      if (FirstName != other.FirstName) return false;
      if (Birthdate != other.Birthdate) return false;
      if (Email != other.Email) return false;
      if (Passport != other.Passport) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gender != global::G2Rail.Protobuf.Passenger.Types.Gender.Male) hash ^= Gender.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (Birthdate.Length != 0) hash ^= Birthdate.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Passport.Length != 0) hash ^= Passport.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gender != global::G2Rail.Protobuf.Passenger.Types.Gender.Male) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Gender);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Phone);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FirstName);
      }
      if (Birthdate.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Birthdate);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Email);
      }
      if (Passport.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Passport);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gender != global::G2Rail.Protobuf.Passenger.Types.Gender.Male) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Gender);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (Birthdate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Birthdate);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Passport.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Passport);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Passenger other) {
      if (other == null) {
        return;
      }
      if (other.Gender != global::G2Rail.Protobuf.Passenger.Types.Gender.Male) {
        Gender = other.Gender;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.Birthdate.Length != 0) {
        Birthdate = other.Birthdate;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Passport.Length != 0) {
        Passport = other.Passport;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gender = (global::G2Rail.Protobuf.Passenger.Types.Gender) input.ReadEnum();
            break;
          }
          case 18: {
            Phone = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 34: {
            FirstName = input.ReadString();
            break;
          }
          case 42: {
            Birthdate = input.ReadString();
            break;
          }
          case 50: {
            Email = input.ReadString();
            break;
          }
          case 58: {
            Passport = input.ReadString();
            break;
          }
          case 66: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Passenger message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Gender {
        [pbr::OriginalName("male")] Male = 0,
        [pbr::OriginalName("female")] Female = 1,
      }

    }
    #endregion

  }

  public sealed partial class OnlineOrderAsyncQueryRequest : pb::IMessage<OnlineOrderAsyncQueryRequest> {
    private static readonly pb::MessageParser<OnlineOrderAsyncQueryRequest> _parser = new pb::MessageParser<OnlineOrderAsyncQueryRequest>(() => new OnlineOrderAsyncQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlineOrderAsyncQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineOrdersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineOrderAsyncQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineOrderAsyncQueryRequest(OnlineOrderAsyncQueryRequest other) : this() {
      asyncKey_ = other.asyncKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineOrderAsyncQueryRequest Clone() {
      return new OnlineOrderAsyncQueryRequest(this);
    }

    /// <summary>Field number for the "async_key" field.</summary>
    public const int AsyncKeyFieldNumber = 1;
    private string asyncKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AsyncKey {
      get { return asyncKey_; }
      set {
        asyncKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlineOrderAsyncQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlineOrderAsyncQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AsyncKey != other.AsyncKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AsyncKey.Length != 0) hash ^= AsyncKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AsyncKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AsyncKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AsyncKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AsyncKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlineOrderAsyncQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.AsyncKey.Length != 0) {
        AsyncKey = other.AsyncKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AsyncKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnlineOrderResponse : pb::IMessage<OnlineOrderResponse> {
    private static readonly pb::MessageParser<OnlineOrderResponse> _parser = new pb::MessageParser<OnlineOrderResponse>(() => new OnlineOrderResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlineOrderResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineOrdersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineOrderResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineOrderResponse(OnlineOrderResponse other) : this() {
      id_ = other.id_;
      loading_ = other.loading_;
      offlineFulfillment_ = other.offlineFulfillment_;
      trainDescription_ = other.trainDescription_;
      railway_ = other.railway_ != null ? other.railway_.Clone() : null;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      departure_ = other.departure_;
      arrival_ = other.arrival_;
      ticketPrice_ = other.ticketPrice_ != null ? other.ticketPrice_.Clone() : null;
      paymentPrice_ = other.paymentPrice_ != null ? other.paymentPrice_.Clone() : null;
      chargingPrice_ = other.chargingPrice_ != null ? other.chargingPrice_.Clone() : null;
      rebateAmount_ = other.rebateAmount_ != null ? other.rebateAmount_.Clone() : null;
      trains_ = other.trains_.Clone();
      passengers_ = other.passengers_.Clone();
      tickets_ = other.tickets_.Clone();
      records_ = other.records_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineOrderResponse Clone() {
      return new OnlineOrderResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loading" field.</summary>
    public const int LoadingFieldNumber = 14;
    private bool loading_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Loading {
      get { return loading_; }
      set {
        loading_ = value;
      }
    }

    /// <summary>Field number for the "offline_fulfillment" field.</summary>
    public const int OfflineFulfillmentFieldNumber = 15;
    private bool offlineFulfillment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool OfflineFulfillment {
      get { return offlineFulfillment_; }
      set {
        offlineFulfillment_ = value;
      }
    }

    /// <summary>Field number for the "train_description" field.</summary>
    public const int TrainDescriptionFieldNumber = 16;
    private string trainDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TrainDescription {
      get { return trainDescription_; }
      set {
        trainDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "railway" field.</summary>
    public const int RailwayFieldNumber = 2;
    private global::G2Rail.Protobuf.Railway railway_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Railway Railway {
      get { return railway_; }
      set {
        railway_ = value;
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 3;
    private global::G2Rail.Protobuf.Station from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Station From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 4;
    private global::G2Rail.Protobuf.Station to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Station To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "departure" field.</summary>
    public const int DepartureFieldNumber = 5;
    private string departure_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Departure {
      get { return departure_; }
      set {
        departure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "arrival" field.</summary>
    public const int ArrivalFieldNumber = 6;
    private string arrival_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Arrival {
      get { return arrival_; }
      set {
        arrival_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticket_price" field.</summary>
    public const int TicketPriceFieldNumber = 7;
    private global::G2Rail.Protobuf.Price ticketPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price TicketPrice {
      get { return ticketPrice_; }
      set {
        ticketPrice_ = value;
      }
    }

    /// <summary>Field number for the "payment_price" field.</summary>
    public const int PaymentPriceFieldNumber = 8;
    private global::G2Rail.Protobuf.Price paymentPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price PaymentPrice {
      get { return paymentPrice_; }
      set {
        paymentPrice_ = value;
      }
    }

    /// <summary>Field number for the "charging_price" field.</summary>
    public const int ChargingPriceFieldNumber = 9;
    private global::G2Rail.Protobuf.Price chargingPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price ChargingPrice {
      get { return chargingPrice_; }
      set {
        chargingPrice_ = value;
      }
    }

    /// <summary>Field number for the "rebate_amount" field.</summary>
    public const int RebateAmountFieldNumber = 10;
    private global::G2Rail.Protobuf.Price rebateAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price RebateAmount {
      get { return rebateAmount_; }
      set {
        rebateAmount_ = value;
      }
    }

    /// <summary>Field number for the "trains" field.</summary>
    public const int TrainsFieldNumber = 17;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Train> _repeated_trains_codec
        = pb::FieldCodec.ForMessage(138, global::G2Rail.Protobuf.Train.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Train> trains_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Train>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Train> Trains {
      get { return trains_; }
    }

    /// <summary>Field number for the "passengers" field.</summary>
    public const int PassengersFieldNumber = 11;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Passenger> _repeated_passengers_codec
        = pb::FieldCodec.ForMessage(90, global::G2Rail.Protobuf.Passenger.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Passenger> passengers_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Passenger>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Passenger> Passengers {
      get { return passengers_; }
    }

    /// <summary>Field number for the "tickets" field.</summary>
    public const int TicketsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Ticket> _repeated_tickets_codec
        = pb::FieldCodec.ForMessage(98, global::G2Rail.Protobuf.Ticket.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Ticket> tickets_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Ticket>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Ticket> Tickets {
      get { return tickets_; }
    }

    /// <summary>Field number for the "records" field.</summary>
    public const int RecordsFieldNumber = 13;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.PriceDetail> _repeated_records_codec
        = pb::FieldCodec.ForMessage(106, global::G2Rail.Protobuf.PriceDetail.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.PriceDetail> records_ = new pbc::RepeatedField<global::G2Rail.Protobuf.PriceDetail>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.PriceDetail> Records {
      get { return records_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlineOrderResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlineOrderResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Loading != other.Loading) return false;
      if (OfflineFulfillment != other.OfflineFulfillment) return false;
      if (TrainDescription != other.TrainDescription) return false;
      if (!object.Equals(Railway, other.Railway)) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (Departure != other.Departure) return false;
      if (Arrival != other.Arrival) return false;
      if (!object.Equals(TicketPrice, other.TicketPrice)) return false;
      if (!object.Equals(PaymentPrice, other.PaymentPrice)) return false;
      if (!object.Equals(ChargingPrice, other.ChargingPrice)) return false;
      if (!object.Equals(RebateAmount, other.RebateAmount)) return false;
      if(!trains_.Equals(other.trains_)) return false;
      if(!passengers_.Equals(other.passengers_)) return false;
      if(!tickets_.Equals(other.tickets_)) return false;
      if(!records_.Equals(other.records_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Loading != false) hash ^= Loading.GetHashCode();
      if (OfflineFulfillment != false) hash ^= OfflineFulfillment.GetHashCode();
      if (TrainDescription.Length != 0) hash ^= TrainDescription.GetHashCode();
      if (railway_ != null) hash ^= Railway.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (Departure.Length != 0) hash ^= Departure.GetHashCode();
      if (Arrival.Length != 0) hash ^= Arrival.GetHashCode();
      if (ticketPrice_ != null) hash ^= TicketPrice.GetHashCode();
      if (paymentPrice_ != null) hash ^= PaymentPrice.GetHashCode();
      if (chargingPrice_ != null) hash ^= ChargingPrice.GetHashCode();
      if (rebateAmount_ != null) hash ^= RebateAmount.GetHashCode();
      hash ^= trains_.GetHashCode();
      hash ^= passengers_.GetHashCode();
      hash ^= tickets_.GetHashCode();
      hash ^= records_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (railway_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Railway);
      }
      if (from_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(To);
      }
      if (Departure.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Departure);
      }
      if (Arrival.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Arrival);
      }
      if (ticketPrice_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(TicketPrice);
      }
      if (paymentPrice_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PaymentPrice);
      }
      if (chargingPrice_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ChargingPrice);
      }
      if (rebateAmount_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(RebateAmount);
      }
      passengers_.WriteTo(output, _repeated_passengers_codec);
      tickets_.WriteTo(output, _repeated_tickets_codec);
      records_.WriteTo(output, _repeated_records_codec);
      if (Loading != false) {
        output.WriteRawTag(112);
        output.WriteBool(Loading);
      }
      if (OfflineFulfillment != false) {
        output.WriteRawTag(120);
        output.WriteBool(OfflineFulfillment);
      }
      if (TrainDescription.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(TrainDescription);
      }
      trains_.WriteTo(output, _repeated_trains_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Loading != false) {
        size += 1 + 1;
      }
      if (OfflineFulfillment != false) {
        size += 1 + 1;
      }
      if (TrainDescription.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TrainDescription);
      }
      if (railway_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Railway);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Departure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Departure);
      }
      if (Arrival.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Arrival);
      }
      if (ticketPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TicketPrice);
      }
      if (paymentPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PaymentPrice);
      }
      if (chargingPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChargingPrice);
      }
      if (rebateAmount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RebateAmount);
      }
      size += trains_.CalculateSize(_repeated_trains_codec);
      size += passengers_.CalculateSize(_repeated_passengers_codec);
      size += tickets_.CalculateSize(_repeated_tickets_codec);
      size += records_.CalculateSize(_repeated_records_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlineOrderResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Loading != false) {
        Loading = other.Loading;
      }
      if (other.OfflineFulfillment != false) {
        OfflineFulfillment = other.OfflineFulfillment;
      }
      if (other.TrainDescription.Length != 0) {
        TrainDescription = other.TrainDescription;
      }
      if (other.railway_ != null) {
        if (railway_ == null) {
          Railway = new global::G2Rail.Protobuf.Railway();
        }
        Railway.MergeFrom(other.Railway);
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::G2Rail.Protobuf.Station();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::G2Rail.Protobuf.Station();
        }
        To.MergeFrom(other.To);
      }
      if (other.Departure.Length != 0) {
        Departure = other.Departure;
      }
      if (other.Arrival.Length != 0) {
        Arrival = other.Arrival;
      }
      if (other.ticketPrice_ != null) {
        if (ticketPrice_ == null) {
          TicketPrice = new global::G2Rail.Protobuf.Price();
        }
        TicketPrice.MergeFrom(other.TicketPrice);
      }
      if (other.paymentPrice_ != null) {
        if (paymentPrice_ == null) {
          PaymentPrice = new global::G2Rail.Protobuf.Price();
        }
        PaymentPrice.MergeFrom(other.PaymentPrice);
      }
      if (other.chargingPrice_ != null) {
        if (chargingPrice_ == null) {
          ChargingPrice = new global::G2Rail.Protobuf.Price();
        }
        ChargingPrice.MergeFrom(other.ChargingPrice);
      }
      if (other.rebateAmount_ != null) {
        if (rebateAmount_ == null) {
          RebateAmount = new global::G2Rail.Protobuf.Price();
        }
        RebateAmount.MergeFrom(other.RebateAmount);
      }
      trains_.Add(other.trains_);
      passengers_.Add(other.passengers_);
      tickets_.Add(other.tickets_);
      records_.Add(other.records_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (railway_ == null) {
              Railway = new global::G2Rail.Protobuf.Railway();
            }
            input.ReadMessage(Railway);
            break;
          }
          case 26: {
            if (from_ == null) {
              From = new global::G2Rail.Protobuf.Station();
            }
            input.ReadMessage(From);
            break;
          }
          case 34: {
            if (to_ == null) {
              To = new global::G2Rail.Protobuf.Station();
            }
            input.ReadMessage(To);
            break;
          }
          case 42: {
            Departure = input.ReadString();
            break;
          }
          case 50: {
            Arrival = input.ReadString();
            break;
          }
          case 58: {
            if (ticketPrice_ == null) {
              TicketPrice = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(TicketPrice);
            break;
          }
          case 66: {
            if (paymentPrice_ == null) {
              PaymentPrice = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(PaymentPrice);
            break;
          }
          case 74: {
            if (chargingPrice_ == null) {
              ChargingPrice = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(ChargingPrice);
            break;
          }
          case 82: {
            if (rebateAmount_ == null) {
              RebateAmount = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(RebateAmount);
            break;
          }
          case 90: {
            passengers_.AddEntriesFrom(input, _repeated_passengers_codec);
            break;
          }
          case 98: {
            tickets_.AddEntriesFrom(input, _repeated_tickets_codec);
            break;
          }
          case 106: {
            records_.AddEntriesFrom(input, _repeated_records_codec);
            break;
          }
          case 112: {
            Loading = input.ReadBool();
            break;
          }
          case 120: {
            OfflineFulfillment = input.ReadBool();
            break;
          }
          case 130: {
            TrainDescription = input.ReadString();
            break;
          }
          case 138: {
            trains_.AddEntriesFrom(input, _repeated_trains_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Ticket : pb::IMessage<Ticket> {
    private static readonly pb::MessageParser<Ticket> _parser = new pb::MessageParser<Ticket>(() => new Ticket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ticket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineOrdersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ticket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ticket(Ticket other) : this() {
      id_ = other.id_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      price_ = other.price_ != null ? other.price_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ticket Clone() {
      return new Ticket(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private global::G2Rail.Protobuf.Station from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Station From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 3;
    private global::G2Rail.Protobuf.Station to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Station To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 4;
    private global::G2Rail.Protobuf.Price price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ticket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ticket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (!object.Equals(Price, other.Price)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (price_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Price);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ticket other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::G2Rail.Protobuf.Station();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::G2Rail.Protobuf.Station();
        }
        To.MergeFrom(other.To);
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::G2Rail.Protobuf.Price();
        }
        Price.MergeFrom(other.Price);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::G2Rail.Protobuf.Station();
            }
            input.ReadMessage(From);
            break;
          }
          case 26: {
            if (to_ == null) {
              To = new global::G2Rail.Protobuf.Station();
            }
            input.ReadMessage(To);
            break;
          }
          case 34: {
            if (price_ == null) {
              Price = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(Price);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PriceDetail : pb::IMessage<PriceDetail> {
    private static readonly pb::MessageParser<PriceDetail> _parser = new pb::MessageParser<PriceDetail>(() => new PriceDetail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PriceDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineOrdersReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PriceDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PriceDetail(PriceDetail other) : this() {
      id_ = other.id_;
      amount_ = other.amount_ != null ? other.amount_.Clone() : null;
      type_ = other.type_;
      category_ = other.category_;
      target_ = other.target_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PriceDetail Clone() {
      return new PriceDetail(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private global::G2Rail.Protobuf.Price amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 4;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 5;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PriceDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PriceDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (Type != other.Type) return false;
      if (Category != other.Category) return false;
      if (Target != other.Target) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (amount_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Amount);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Category);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Target);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PriceDetail other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          Amount = new global::G2Rail.Protobuf.Price();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (amount_ == null) {
              Amount = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(Amount);
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            Category = input.ReadString();
            break;
          }
          case 42: {
            Target = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
