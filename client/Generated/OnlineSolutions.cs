// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/OnlineSolutions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace G2Rail.Protobuf {

  /// <summary>Holder for reflection information generated from Protos/OnlineSolutions.proto</summary>
  public static partial class OnlineSolutionsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/OnlineSolutions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OnlineSolutionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxQcm90b3MvT25saW5lU29sdXRpb25zLnByb3RvEgZnMnJhaWwaE1Byb3Rv",
            "cy9Db21tb24ucHJvdG8iYwoNU2VhcmNoUmVxdWVzdBIMCgRmcm9tGAEgASgJ",
            "EgoKAnRvGAIgASgJEgwKBGRhdGUYAyABKAkSDAoEdGltZRgEIAEoCRINCgVh",
            "ZHVsdBgFIAEoDRINCgVjaGlsZBgGIAEoDSI1CiBPbmxpbmVTb2x1dGlvbnNB",
            "c3luY1F1ZXJ5UmVxdWVzdBIRCglhc3luY19rZXkYASABKAkiTQoXT25saW5l",
            "U29sdXRpb25zUmVzcG9uc2USMgoRcmFpbHdheV9zb2x1dGlvbnMYASADKAsy",
            "Fy5nMnJhaWwuUmFpbHdheVNvbHV0aW9uImkKD1JhaWx3YXlTb2x1dGlvbhIg",
            "CgdyYWlsd2F5GAEgASgLMg8uZzJyYWlsLlJhaWx3YXkSDwoHbG9hZGluZxgC",
            "IAEoCBIjCglzb2x1dGlvbnMYAyADKAsyEC5nMnJhaWwuU29sdXRpb24iKQoI",
            "RHVyYXRpb24SDAoEaG91chgBIAEoDRIPCgdtaW51dGVzGAIgASgNIrgBCghT",
            "b2x1dGlvbhIdCgRmcm9tGAEgASgLMg8uZzJyYWlsLlN0YXRpb24SGwoCdG8Y",
            "AiABKAsyDy5nMnJhaWwuU3RhdGlvbhIRCglkZXBhcnR1cmUYAyABKAkSFgoO",
            "dHJhbnNmZXJfdGltZXMYBCABKA0SIgoIZHVyYXRpb24YBSABKAsyEC5nMnJh",
            "aWwuRHVyYXRpb24SIQoIc2VjdGlvbnMYBiADKAsyDy5nMnJhaWwuU2VjdGlv",
            "biKQAQoHU2VjdGlvbhIUCgxjYXJyaWVyX2NvZGUYASABKAkSGwoTY2Fycmll",
            "cl9kZXNjcmlwdGlvbhgCIAEoCRIUCgxjYXJyaWVyX2ljb24YAyABKAkSHQoG",
            "b2ZmZXJzGAQgAygLMg0uZzJyYWlsLk9mZmVyEh0KBnRyYWlucxgFIAMoCzIN",
            "LmcycmFpbC5UcmFpbiLtAQoFT2ZmZXISDAoEY29kZRgBIAEoCRITCgtkZXNj",
            "cmlwdGlvbhgCIAEoCRIOCgZkZXRhaWwYAyABKAkSEAoIaGVscF91cmwYBCAB",
            "KAkSEwoLcmVzdHJpY3Rpb24YBSABKAkSEwoLdGlja2V0X3R5cGUYBiABKAkS",
            "EQoJc2VhdF90eXBlGAcgASgJEhMKC3JlZnVuZF90eXBlGAggASgJEhUKDWNv",
            "bmZpcm1fYWdhaW4YCSABKAkSEwoLY2hhbmdlX3R5cGUYCiABKAkSIQoIc2Vy",
            "dmljZXMYCyADKAsyDy5nMnJhaWwuU2VydmljZSKkBgoHU2VydmljZRIcCgVw",
            "cmljZRgfIAEoCzINLmcycmFpbC5QcmljZRIpChJhdmVyYWdlX3VuaXRfcHJp",
            "Y2UYICABKAsyDS5nMnJhaWwuUHJpY2USJwoJYXZhaWxhYmxlGCEgASgLMhQu",
            "ZzJyYWlsLkF2YWlsYWJpbGl0eRIMCgRjb2RlGAEgASgJEhMKC2Rlc2NyaXB0",
            "aW9uGAIgASgJEg4KBmRldGFpbBgDIAEoCRIVCg1mZWF0dXJlX3Bob3RvGAQg",
            "ASgJEhQKDGJvb2tpbmdfY29kZRgFIAEoCRIUCgxib29raW5nX3R5cGUYBiAB",
            "KAkSEAoIaGFzX3dpZmkYByABKAkSGAoQaGFzX3Bvd2VyX291dGxldBgIIAEo",
            "CRIcChRoYXNfYWlyX2NvbmRpdGlvbmluZxgJIAEoCRIgChhoYXNfZW50ZXJ0",
            "YWlubWVudF9zeXN0ZW0YCiABKAkSGQoRaGFzX3JlYWRpbmdfbGlnaHQYCyAB",
            "KAkSGAoQc2VhdF9yZXNlcnZhdGlvbhgMIAEoCRIRCglzZWF0X3R5cGUYDSAB",
            "KAkSHwoXbnVtYmVyX29mX3NlYXRzX3Blcl9yb3cYDiABKAkSEAoIYmVkX3R5",
            "cGUYDyABKAkSEwoLdG9pbGV0X3R5cGUYECABKAkSGQoRZm9vZF9zZXJ2aWNl",
            "X3R5cGUYESABKAkSEwoLZm9vZF9kcmlua3MYEiABKAkSFQoNZnJlZV9tZWdh",
            "emluZRgTIAEoCRIUCgxjbGVhbmluZ19raXQYFCABKAkSEwoLd2VsY29tZV9r",
            "aXQYFSABKAkSFgoObG91bmdlX3NlcnZpY2UYFiABKAkSEAoIY2hlY2tfaW4Y",
            "FyABKAkSEwoLc2lsZW50X2FyZWEYGCABKAkSFQoNcHJpdmF0ZV9jYWJpbhgZ",
            "IAEoCRIRCglwbGF5X2FyZWEYGiABKAkSFQoNYmljeWNsZV9zcGFjZRgbIAEo",
            "CRIbChNkaXNhYmxlZF9mYWNpbGl0aWVzGBwgASgJEhQKDG1vcm5pbmdfY2Fs",
            "bBgdIAEoCRIQCghoZWxwX3VybBgeIAEoCSIdCgxBdmFpbGFiaWxpdHkSDQoF",
            "c2VhdHMYASABKA0ytAEKD09ubGluZVNvbHV0aW9ucxI5CgZTZWFyY2gSFS5n",
            "MnJhaWwuU2VhcmNoUmVxdWVzdBoYLmcycmFpbC5Bc3luY0tleVJlc3BvbnNl",
            "EmYKGVF1ZXJ5QXN5bmNPbmxpbmVTb2x1dGlvbnMSKC5nMnJhaWwuT25saW5l",
            "U29sdXRpb25zQXN5bmNRdWVyeVJlcXVlc3QaHy5nMnJhaWwuT25saW5lU29s",
            "dXRpb25zUmVzcG9uc2VCQgoOaW8uZ3JwYy5nMnJhaWxCFE9ubGluZVNvbHV0",
            "aW9uc1Byb3RvUAFaBmcycmFpbKoCD0cyUmFpbC5Qcm90b2J1ZmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::G2Rail.Protobuf.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.SearchRequest), global::G2Rail.Protobuf.SearchRequest.Parser, new[]{ "From", "To", "Date", "Time", "Adult", "Child" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.OnlineSolutionsAsyncQueryRequest), global::G2Rail.Protobuf.OnlineSolutionsAsyncQueryRequest.Parser, new[]{ "AsyncKey" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.OnlineSolutionsResponse), global::G2Rail.Protobuf.OnlineSolutionsResponse.Parser, new[]{ "RailwaySolutions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.RailwaySolution), global::G2Rail.Protobuf.RailwaySolution.Parser, new[]{ "Railway", "Loading", "Solutions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Duration), global::G2Rail.Protobuf.Duration.Parser, new[]{ "Hour", "Minutes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Solution), global::G2Rail.Protobuf.Solution.Parser, new[]{ "From", "To", "Departure", "TransferTimes", "Duration", "Sections" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Section), global::G2Rail.Protobuf.Section.Parser, new[]{ "CarrierCode", "CarrierDescription", "CarrierIcon", "Offers", "Trains" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Offer), global::G2Rail.Protobuf.Offer.Parser, new[]{ "Code", "Description", "Detail", "HelpUrl", "Restriction", "TicketType", "SeatType", "RefundType", "ConfirmAgain", "ChangeType", "Services" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Service), global::G2Rail.Protobuf.Service.Parser, new[]{ "Price", "AverageUnitPrice", "Available", "Code", "Description", "Detail", "FeaturePhoto", "BookingCode", "BookingType", "HasWifi", "HasPowerOutlet", "HasAirConditioning", "HasEntertainmentSystem", "HasReadingLight", "SeatReservation", "SeatType", "NumberOfSeatsPerRow", "BedType", "ToiletType", "FoodServiceType", "FoodDrinks", "FreeMegazine", "CleaningKit", "WelcomeKit", "LoungeService", "CheckIn", "SilentArea", "PrivateCabin", "PlayArea", "BicycleSpace", "DisabledFacilities", "MorningCall", "HelpUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::G2Rail.Protobuf.Availability), global::G2Rail.Protobuf.Availability.Parser, new[]{ "Seats" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SearchRequest : pb::IMessage<SearchRequest> {
    private static readonly pb::MessageParser<SearchRequest> _parser = new pb::MessageParser<SearchRequest>(() => new SearchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest(SearchRequest other) : this() {
      from_ = other.from_;
      to_ = other.to_;
      date_ = other.date_;
      time_ = other.time_;
      adult_ = other.adult_;
      child_ = other.child_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchRequest Clone() {
      return new SearchRequest(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 3;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "adult" field.</summary>
    public const int AdultFieldNumber = 5;
    private uint adult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Adult {
      get { return adult_; }
      set {
        adult_ = value;
      }
    }

    /// <summary>Field number for the "child" field.</summary>
    public const int ChildFieldNumber = 6;
    private uint child_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Child {
      get { return child_; }
      set {
        child_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      if (Date != other.Date) return false;
      if (Time != other.Time) return false;
      if (Adult != other.Adult) return false;
      if (Child != other.Child) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (Adult != 0) hash ^= Adult.GetHashCode();
      if (Child != 0) hash ^= Child.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(From);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Date);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Time);
      }
      if (Adult != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Adult);
      }
      if (Child != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(Child);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (Adult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Adult);
      }
      if (Child != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Child);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchRequest other) {
      if (other == null) {
        return;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.Adult != 0) {
        Adult = other.Adult;
      }
      if (other.Child != 0) {
        Child = other.Child;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            From = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
          case 26: {
            Date = input.ReadString();
            break;
          }
          case 34: {
            Time = input.ReadString();
            break;
          }
          case 40: {
            Adult = input.ReadUInt32();
            break;
          }
          case 48: {
            Child = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnlineSolutionsAsyncQueryRequest : pb::IMessage<OnlineSolutionsAsyncQueryRequest> {
    private static readonly pb::MessageParser<OnlineSolutionsAsyncQueryRequest> _parser = new pb::MessageParser<OnlineSolutionsAsyncQueryRequest>(() => new OnlineSolutionsAsyncQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlineSolutionsAsyncQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineSolutionsAsyncQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineSolutionsAsyncQueryRequest(OnlineSolutionsAsyncQueryRequest other) : this() {
      asyncKey_ = other.asyncKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineSolutionsAsyncQueryRequest Clone() {
      return new OnlineSolutionsAsyncQueryRequest(this);
    }

    /// <summary>Field number for the "async_key" field.</summary>
    public const int AsyncKeyFieldNumber = 1;
    private string asyncKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AsyncKey {
      get { return asyncKey_; }
      set {
        asyncKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlineSolutionsAsyncQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlineSolutionsAsyncQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AsyncKey != other.AsyncKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AsyncKey.Length != 0) hash ^= AsyncKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AsyncKey.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AsyncKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AsyncKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AsyncKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlineSolutionsAsyncQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.AsyncKey.Length != 0) {
        AsyncKey = other.AsyncKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AsyncKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnlineSolutionsResponse : pb::IMessage<OnlineSolutionsResponse> {
    private static readonly pb::MessageParser<OnlineSolutionsResponse> _parser = new pb::MessageParser<OnlineSolutionsResponse>(() => new OnlineSolutionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlineSolutionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineSolutionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineSolutionsResponse(OnlineSolutionsResponse other) : this() {
      railwaySolutions_ = other.railwaySolutions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineSolutionsResponse Clone() {
      return new OnlineSolutionsResponse(this);
    }

    /// <summary>Field number for the "railway_solutions" field.</summary>
    public const int RailwaySolutionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.RailwaySolution> _repeated_railwaySolutions_codec
        = pb::FieldCodec.ForMessage(10, global::G2Rail.Protobuf.RailwaySolution.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.RailwaySolution> railwaySolutions_ = new pbc::RepeatedField<global::G2Rail.Protobuf.RailwaySolution>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.RailwaySolution> RailwaySolutions {
      get { return railwaySolutions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlineSolutionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlineSolutionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!railwaySolutions_.Equals(other.railwaySolutions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= railwaySolutions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      railwaySolutions_.WriteTo(output, _repeated_railwaySolutions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += railwaySolutions_.CalculateSize(_repeated_railwaySolutions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlineSolutionsResponse other) {
      if (other == null) {
        return;
      }
      railwaySolutions_.Add(other.railwaySolutions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            railwaySolutions_.AddEntriesFrom(input, _repeated_railwaySolutions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RailwaySolution : pb::IMessage<RailwaySolution> {
    private static readonly pb::MessageParser<RailwaySolution> _parser = new pb::MessageParser<RailwaySolution>(() => new RailwaySolution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RailwaySolution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RailwaySolution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RailwaySolution(RailwaySolution other) : this() {
      railway_ = other.railway_ != null ? other.railway_.Clone() : null;
      loading_ = other.loading_;
      solutions_ = other.solutions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RailwaySolution Clone() {
      return new RailwaySolution(this);
    }

    /// <summary>Field number for the "railway" field.</summary>
    public const int RailwayFieldNumber = 1;
    private global::G2Rail.Protobuf.Railway railway_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Railway Railway {
      get { return railway_; }
      set {
        railway_ = value;
      }
    }

    /// <summary>Field number for the "loading" field.</summary>
    public const int LoadingFieldNumber = 2;
    private bool loading_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Loading {
      get { return loading_; }
      set {
        loading_ = value;
      }
    }

    /// <summary>Field number for the "solutions" field.</summary>
    public const int SolutionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Solution> _repeated_solutions_codec
        = pb::FieldCodec.ForMessage(26, global::G2Rail.Protobuf.Solution.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Solution> solutions_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Solution>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Solution> Solutions {
      get { return solutions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RailwaySolution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RailwaySolution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Railway, other.Railway)) return false;
      if (Loading != other.Loading) return false;
      if(!solutions_.Equals(other.solutions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (railway_ != null) hash ^= Railway.GetHashCode();
      if (Loading != false) hash ^= Loading.GetHashCode();
      hash ^= solutions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (railway_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Railway);
      }
      if (Loading != false) {
        output.WriteRawTag(16);
        output.WriteBool(Loading);
      }
      solutions_.WriteTo(output, _repeated_solutions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (railway_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Railway);
      }
      if (Loading != false) {
        size += 1 + 1;
      }
      size += solutions_.CalculateSize(_repeated_solutions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RailwaySolution other) {
      if (other == null) {
        return;
      }
      if (other.railway_ != null) {
        if (railway_ == null) {
          Railway = new global::G2Rail.Protobuf.Railway();
        }
        Railway.MergeFrom(other.Railway);
      }
      if (other.Loading != false) {
        Loading = other.Loading;
      }
      solutions_.Add(other.solutions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (railway_ == null) {
              Railway = new global::G2Rail.Protobuf.Railway();
            }
            input.ReadMessage(Railway);
            break;
          }
          case 16: {
            Loading = input.ReadBool();
            break;
          }
          case 26: {
            solutions_.AddEntriesFrom(input, _repeated_solutions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Duration : pb::IMessage<Duration> {
    private static readonly pb::MessageParser<Duration> _parser = new pb::MessageParser<Duration>(() => new Duration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Duration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration(Duration other) : this() {
      hour_ = other.hour_;
      minutes_ = other.minutes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration Clone() {
      return new Duration(this);
    }

    /// <summary>Field number for the "hour" field.</summary>
    public const int HourFieldNumber = 1;
    private uint hour_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Hour {
      get { return hour_; }
      set {
        hour_ = value;
      }
    }

    /// <summary>Field number for the "minutes" field.</summary>
    public const int MinutesFieldNumber = 2;
    private uint minutes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Minutes {
      get { return minutes_; }
      set {
        minutes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Duration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Duration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hour != other.Hour) return false;
      if (Minutes != other.Minutes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hour != 0) hash ^= Hour.GetHashCode();
      if (Minutes != 0) hash ^= Minutes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Hour != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Hour);
      }
      if (Minutes != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Minutes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hour != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Hour);
      }
      if (Minutes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Minutes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Duration other) {
      if (other == null) {
        return;
      }
      if (other.Hour != 0) {
        Hour = other.Hour;
      }
      if (other.Minutes != 0) {
        Minutes = other.Minutes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Hour = input.ReadUInt32();
            break;
          }
          case 16: {
            Minutes = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Solution : pb::IMessage<Solution> {
    private static readonly pb::MessageParser<Solution> _parser = new pb::MessageParser<Solution>(() => new Solution());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Solution> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Solution() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Solution(Solution other) : this() {
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      departure_ = other.departure_;
      transferTimes_ = other.transferTimes_;
      duration_ = other.duration_ != null ? other.duration_.Clone() : null;
      sections_ = other.sections_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Solution Clone() {
      return new Solution(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private global::G2Rail.Protobuf.Station from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Station From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::G2Rail.Protobuf.Station to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Station To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "departure" field.</summary>
    public const int DepartureFieldNumber = 3;
    private string departure_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Departure {
      get { return departure_; }
      set {
        departure_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transfer_times" field.</summary>
    public const int TransferTimesFieldNumber = 4;
    private uint transferTimes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TransferTimes {
      get { return transferTimes_; }
      set {
        transferTimes_ = value;
      }
    }

    /// <summary>Field number for the "duration" field.</summary>
    public const int DurationFieldNumber = 5;
    private global::G2Rail.Protobuf.Duration duration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Duration Duration {
      get { return duration_; }
      set {
        duration_ = value;
      }
    }

    /// <summary>Field number for the "sections" field.</summary>
    public const int SectionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Section> _repeated_sections_codec
        = pb::FieldCodec.ForMessage(50, global::G2Rail.Protobuf.Section.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Section> sections_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Section>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Section> Sections {
      get { return sections_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Solution);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Solution other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (Departure != other.Departure) return false;
      if (TransferTimes != other.TransferTimes) return false;
      if (!object.Equals(Duration, other.Duration)) return false;
      if(!sections_.Equals(other.sections_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (Departure.Length != 0) hash ^= Departure.GetHashCode();
      if (TransferTimes != 0) hash ^= TransferTimes.GetHashCode();
      if (duration_ != null) hash ^= Duration.GetHashCode();
      hash ^= sections_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (Departure.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Departure);
      }
      if (TransferTimes != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(TransferTimes);
      }
      if (duration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Duration);
      }
      sections_.WriteTo(output, _repeated_sections_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Departure.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Departure);
      }
      if (TransferTimes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TransferTimes);
      }
      if (duration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Duration);
      }
      size += sections_.CalculateSize(_repeated_sections_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Solution other) {
      if (other == null) {
        return;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::G2Rail.Protobuf.Station();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::G2Rail.Protobuf.Station();
        }
        To.MergeFrom(other.To);
      }
      if (other.Departure.Length != 0) {
        Departure = other.Departure;
      }
      if (other.TransferTimes != 0) {
        TransferTimes = other.TransferTimes;
      }
      if (other.duration_ != null) {
        if (duration_ == null) {
          Duration = new global::G2Rail.Protobuf.Duration();
        }
        Duration.MergeFrom(other.Duration);
      }
      sections_.Add(other.sections_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (from_ == null) {
              From = new global::G2Rail.Protobuf.Station();
            }
            input.ReadMessage(From);
            break;
          }
          case 18: {
            if (to_ == null) {
              To = new global::G2Rail.Protobuf.Station();
            }
            input.ReadMessage(To);
            break;
          }
          case 26: {
            Departure = input.ReadString();
            break;
          }
          case 32: {
            TransferTimes = input.ReadUInt32();
            break;
          }
          case 42: {
            if (duration_ == null) {
              Duration = new global::G2Rail.Protobuf.Duration();
            }
            input.ReadMessage(Duration);
            break;
          }
          case 50: {
            sections_.AddEntriesFrom(input, _repeated_sections_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Section : pb::IMessage<Section> {
    private static readonly pb::MessageParser<Section> _parser = new pb::MessageParser<Section>(() => new Section());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Section> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Section() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Section(Section other) : this() {
      carrierCode_ = other.carrierCode_;
      carrierDescription_ = other.carrierDescription_;
      carrierIcon_ = other.carrierIcon_;
      offers_ = other.offers_.Clone();
      trains_ = other.trains_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Section Clone() {
      return new Section(this);
    }

    /// <summary>Field number for the "carrier_code" field.</summary>
    public const int CarrierCodeFieldNumber = 1;
    private string carrierCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierCode {
      get { return carrierCode_; }
      set {
        carrierCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_description" field.</summary>
    public const int CarrierDescriptionFieldNumber = 2;
    private string carrierDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierDescription {
      get { return carrierDescription_; }
      set {
        carrierDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "carrier_icon" field.</summary>
    public const int CarrierIconFieldNumber = 3;
    private string carrierIcon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CarrierIcon {
      get { return carrierIcon_; }
      set {
        carrierIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "offers" field.</summary>
    public const int OffersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Offer> _repeated_offers_codec
        = pb::FieldCodec.ForMessage(34, global::G2Rail.Protobuf.Offer.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Offer> offers_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Offer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Offer> Offers {
      get { return offers_; }
    }

    /// <summary>Field number for the "trains" field.</summary>
    public const int TrainsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Train> _repeated_trains_codec
        = pb::FieldCodec.ForMessage(42, global::G2Rail.Protobuf.Train.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Train> trains_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Train>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Train> Trains {
      get { return trains_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Section);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Section other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CarrierCode != other.CarrierCode) return false;
      if (CarrierDescription != other.CarrierDescription) return false;
      if (CarrierIcon != other.CarrierIcon) return false;
      if(!offers_.Equals(other.offers_)) return false;
      if(!trains_.Equals(other.trains_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CarrierCode.Length != 0) hash ^= CarrierCode.GetHashCode();
      if (CarrierDescription.Length != 0) hash ^= CarrierDescription.GetHashCode();
      if (CarrierIcon.Length != 0) hash ^= CarrierIcon.GetHashCode();
      hash ^= offers_.GetHashCode();
      hash ^= trains_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CarrierCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CarrierCode);
      }
      if (CarrierDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CarrierDescription);
      }
      if (CarrierIcon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CarrierIcon);
      }
      offers_.WriteTo(output, _repeated_offers_codec);
      trains_.WriteTo(output, _repeated_trains_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CarrierCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierCode);
      }
      if (CarrierDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierDescription);
      }
      if (CarrierIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CarrierIcon);
      }
      size += offers_.CalculateSize(_repeated_offers_codec);
      size += trains_.CalculateSize(_repeated_trains_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Section other) {
      if (other == null) {
        return;
      }
      if (other.CarrierCode.Length != 0) {
        CarrierCode = other.CarrierCode;
      }
      if (other.CarrierDescription.Length != 0) {
        CarrierDescription = other.CarrierDescription;
      }
      if (other.CarrierIcon.Length != 0) {
        CarrierIcon = other.CarrierIcon;
      }
      offers_.Add(other.offers_);
      trains_.Add(other.trains_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CarrierCode = input.ReadString();
            break;
          }
          case 18: {
            CarrierDescription = input.ReadString();
            break;
          }
          case 26: {
            CarrierIcon = input.ReadString();
            break;
          }
          case 34: {
            offers_.AddEntriesFrom(input, _repeated_offers_codec);
            break;
          }
          case 42: {
            trains_.AddEntriesFrom(input, _repeated_trains_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Offer : pb::IMessage<Offer> {
    private static readonly pb::MessageParser<Offer> _parser = new pb::MessageParser<Offer>(() => new Offer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Offer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer(Offer other) : this() {
      code_ = other.code_;
      description_ = other.description_;
      detail_ = other.detail_;
      helpUrl_ = other.helpUrl_;
      restriction_ = other.restriction_;
      ticketType_ = other.ticketType_;
      seatType_ = other.seatType_;
      refundType_ = other.refundType_;
      confirmAgain_ = other.confirmAgain_;
      changeType_ = other.changeType_;
      services_ = other.services_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Offer Clone() {
      return new Offer(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 3;
    private string detail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "help_url" field.</summary>
    public const int HelpUrlFieldNumber = 4;
    private string helpUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HelpUrl {
      get { return helpUrl_; }
      set {
        helpUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "restriction" field.</summary>
    public const int RestrictionFieldNumber = 5;
    private string restriction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Restriction {
      get { return restriction_; }
      set {
        restriction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ticket_type" field.</summary>
    public const int TicketTypeFieldNumber = 6;
    private string ticketType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TicketType {
      get { return ticketType_; }
      set {
        ticketType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seat_type" field.</summary>
    public const int SeatTypeFieldNumber = 7;
    private string seatType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeatType {
      get { return seatType_; }
      set {
        seatType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "refund_type" field.</summary>
    public const int RefundTypeFieldNumber = 8;
    private string refundType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefundType {
      get { return refundType_; }
      set {
        refundType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "confirm_again" field.</summary>
    public const int ConfirmAgainFieldNumber = 9;
    private string confirmAgain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmAgain {
      get { return confirmAgain_; }
      set {
        confirmAgain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "change_type" field.</summary>
    public const int ChangeTypeFieldNumber = 10;
    private string changeType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChangeType {
      get { return changeType_; }
      set {
        changeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::G2Rail.Protobuf.Service> _repeated_services_codec
        = pb::FieldCodec.ForMessage(90, global::G2Rail.Protobuf.Service.Parser);
    private readonly pbc::RepeatedField<global::G2Rail.Protobuf.Service> services_ = new pbc::RepeatedField<global::G2Rail.Protobuf.Service>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::G2Rail.Protobuf.Service> Services {
      get { return services_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Offer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Offer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Description != other.Description) return false;
      if (Detail != other.Detail) return false;
      if (HelpUrl != other.HelpUrl) return false;
      if (Restriction != other.Restriction) return false;
      if (TicketType != other.TicketType) return false;
      if (SeatType != other.SeatType) return false;
      if (RefundType != other.RefundType) return false;
      if (ConfirmAgain != other.ConfirmAgain) return false;
      if (ChangeType != other.ChangeType) return false;
      if(!services_.Equals(other.services_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      if (HelpUrl.Length != 0) hash ^= HelpUrl.GetHashCode();
      if (Restriction.Length != 0) hash ^= Restriction.GetHashCode();
      if (TicketType.Length != 0) hash ^= TicketType.GetHashCode();
      if (SeatType.Length != 0) hash ^= SeatType.GetHashCode();
      if (RefundType.Length != 0) hash ^= RefundType.GetHashCode();
      if (ConfirmAgain.Length != 0) hash ^= ConfirmAgain.GetHashCode();
      if (ChangeType.Length != 0) hash ^= ChangeType.GetHashCode();
      hash ^= services_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Detail);
      }
      if (HelpUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HelpUrl);
      }
      if (Restriction.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Restriction);
      }
      if (TicketType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TicketType);
      }
      if (SeatType.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SeatType);
      }
      if (RefundType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(RefundType);
      }
      if (ConfirmAgain.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ConfirmAgain);
      }
      if (ChangeType.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ChangeType);
      }
      services_.WriteTo(output, _repeated_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      if (HelpUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HelpUrl);
      }
      if (Restriction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Restriction);
      }
      if (TicketType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TicketType);
      }
      if (SeatType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatType);
      }
      if (RefundType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefundType);
      }
      if (ConfirmAgain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfirmAgain);
      }
      if (ChangeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChangeType);
      }
      size += services_.CalculateSize(_repeated_services_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Offer other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
      if (other.HelpUrl.Length != 0) {
        HelpUrl = other.HelpUrl;
      }
      if (other.Restriction.Length != 0) {
        Restriction = other.Restriction;
      }
      if (other.TicketType.Length != 0) {
        TicketType = other.TicketType;
      }
      if (other.SeatType.Length != 0) {
        SeatType = other.SeatType;
      }
      if (other.RefundType.Length != 0) {
        RefundType = other.RefundType;
      }
      if (other.ConfirmAgain.Length != 0) {
        ConfirmAgain = other.ConfirmAgain;
      }
      if (other.ChangeType.Length != 0) {
        ChangeType = other.ChangeType;
      }
      services_.Add(other.services_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Detail = input.ReadString();
            break;
          }
          case 34: {
            HelpUrl = input.ReadString();
            break;
          }
          case 42: {
            Restriction = input.ReadString();
            break;
          }
          case 50: {
            TicketType = input.ReadString();
            break;
          }
          case 58: {
            SeatType = input.ReadString();
            break;
          }
          case 66: {
            RefundType = input.ReadString();
            break;
          }
          case 74: {
            ConfirmAgain = input.ReadString();
            break;
          }
          case 82: {
            ChangeType = input.ReadString();
            break;
          }
          case 90: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Service : pb::IMessage<Service> {
    private static readonly pb::MessageParser<Service> _parser = new pb::MessageParser<Service>(() => new Service());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Service> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service(Service other) : this() {
      price_ = other.price_ != null ? other.price_.Clone() : null;
      averageUnitPrice_ = other.averageUnitPrice_ != null ? other.averageUnitPrice_.Clone() : null;
      available_ = other.available_ != null ? other.available_.Clone() : null;
      code_ = other.code_;
      description_ = other.description_;
      detail_ = other.detail_;
      featurePhoto_ = other.featurePhoto_;
      bookingCode_ = other.bookingCode_;
      bookingType_ = other.bookingType_;
      hasWifi_ = other.hasWifi_;
      hasPowerOutlet_ = other.hasPowerOutlet_;
      hasAirConditioning_ = other.hasAirConditioning_;
      hasEntertainmentSystem_ = other.hasEntertainmentSystem_;
      hasReadingLight_ = other.hasReadingLight_;
      seatReservation_ = other.seatReservation_;
      seatType_ = other.seatType_;
      numberOfSeatsPerRow_ = other.numberOfSeatsPerRow_;
      bedType_ = other.bedType_;
      toiletType_ = other.toiletType_;
      foodServiceType_ = other.foodServiceType_;
      foodDrinks_ = other.foodDrinks_;
      freeMegazine_ = other.freeMegazine_;
      cleaningKit_ = other.cleaningKit_;
      welcomeKit_ = other.welcomeKit_;
      loungeService_ = other.loungeService_;
      checkIn_ = other.checkIn_;
      silentArea_ = other.silentArea_;
      privateCabin_ = other.privateCabin_;
      playArea_ = other.playArea_;
      bicycleSpace_ = other.bicycleSpace_;
      disabledFacilities_ = other.disabledFacilities_;
      morningCall_ = other.morningCall_;
      helpUrl_ = other.helpUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service Clone() {
      return new Service(this);
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 31;
    private global::G2Rail.Protobuf.Price price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "average_unit_price" field.</summary>
    public const int AverageUnitPriceFieldNumber = 32;
    private global::G2Rail.Protobuf.Price averageUnitPrice_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Price AverageUnitPrice {
      get { return averageUnitPrice_; }
      set {
        averageUnitPrice_ = value;
      }
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 33;
    private global::G2Rail.Protobuf.Availability available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::G2Rail.Protobuf.Availability Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "detail" field.</summary>
    public const int DetailFieldNumber = 3;
    private string detail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Detail {
      get { return detail_; }
      set {
        detail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "feature_photo" field.</summary>
    public const int FeaturePhotoFieldNumber = 4;
    private string featurePhoto_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FeaturePhoto {
      get { return featurePhoto_; }
      set {
        featurePhoto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "booking_code" field.</summary>
    public const int BookingCodeFieldNumber = 5;
    private string bookingCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookingCode {
      get { return bookingCode_; }
      set {
        bookingCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "booking_type" field.</summary>
    public const int BookingTypeFieldNumber = 6;
    private string bookingType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BookingType {
      get { return bookingType_; }
      set {
        bookingType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_wifi" field.</summary>
    public const int HasWifiFieldNumber = 7;
    private string hasWifi_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HasWifi {
      get { return hasWifi_; }
      set {
        hasWifi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_power_outlet" field.</summary>
    public const int HasPowerOutletFieldNumber = 8;
    private string hasPowerOutlet_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HasPowerOutlet {
      get { return hasPowerOutlet_; }
      set {
        hasPowerOutlet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_air_conditioning" field.</summary>
    public const int HasAirConditioningFieldNumber = 9;
    private string hasAirConditioning_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HasAirConditioning {
      get { return hasAirConditioning_; }
      set {
        hasAirConditioning_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_entertainment_system" field.</summary>
    public const int HasEntertainmentSystemFieldNumber = 10;
    private string hasEntertainmentSystem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HasEntertainmentSystem {
      get { return hasEntertainmentSystem_; }
      set {
        hasEntertainmentSystem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has_reading_light" field.</summary>
    public const int HasReadingLightFieldNumber = 11;
    private string hasReadingLight_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HasReadingLight {
      get { return hasReadingLight_; }
      set {
        hasReadingLight_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seat_reservation" field.</summary>
    public const int SeatReservationFieldNumber = 12;
    private string seatReservation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeatReservation {
      get { return seatReservation_; }
      set {
        seatReservation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "seat_type" field.</summary>
    public const int SeatTypeFieldNumber = 13;
    private string seatType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SeatType {
      get { return seatType_; }
      set {
        seatType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "number_of_seats_per_row" field.</summary>
    public const int NumberOfSeatsPerRowFieldNumber = 14;
    private string numberOfSeatsPerRow_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NumberOfSeatsPerRow {
      get { return numberOfSeatsPerRow_; }
      set {
        numberOfSeatsPerRow_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bed_type" field.</summary>
    public const int BedTypeFieldNumber = 15;
    private string bedType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BedType {
      get { return bedType_; }
      set {
        bedType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toilet_type" field.</summary>
    public const int ToiletTypeFieldNumber = 16;
    private string toiletType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToiletType {
      get { return toiletType_; }
      set {
        toiletType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "food_service_type" field.</summary>
    public const int FoodServiceTypeFieldNumber = 17;
    private string foodServiceType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FoodServiceType {
      get { return foodServiceType_; }
      set {
        foodServiceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "food_drinks" field.</summary>
    public const int FoodDrinksFieldNumber = 18;
    private string foodDrinks_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FoodDrinks {
      get { return foodDrinks_; }
      set {
        foodDrinks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "free_megazine" field.</summary>
    public const int FreeMegazineFieldNumber = 19;
    private string freeMegazine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FreeMegazine {
      get { return freeMegazine_; }
      set {
        freeMegazine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cleaning_kit" field.</summary>
    public const int CleaningKitFieldNumber = 20;
    private string cleaningKit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CleaningKit {
      get { return cleaningKit_; }
      set {
        cleaningKit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "welcome_kit" field.</summary>
    public const int WelcomeKitFieldNumber = 21;
    private string welcomeKit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WelcomeKit {
      get { return welcomeKit_; }
      set {
        welcomeKit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lounge_service" field.</summary>
    public const int LoungeServiceFieldNumber = 22;
    private string loungeService_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LoungeService {
      get { return loungeService_; }
      set {
        loungeService_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "check_in" field.</summary>
    public const int CheckInFieldNumber = 23;
    private string checkIn_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CheckIn {
      get { return checkIn_; }
      set {
        checkIn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "silent_area" field.</summary>
    public const int SilentAreaFieldNumber = 24;
    private string silentArea_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SilentArea {
      get { return silentArea_; }
      set {
        silentArea_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "private_cabin" field.</summary>
    public const int PrivateCabinFieldNumber = 25;
    private string privateCabin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrivateCabin {
      get { return privateCabin_; }
      set {
        privateCabin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "play_area" field.</summary>
    public const int PlayAreaFieldNumber = 26;
    private string playArea_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayArea {
      get { return playArea_; }
      set {
        playArea_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bicycle_space" field.</summary>
    public const int BicycleSpaceFieldNumber = 27;
    private string bicycleSpace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BicycleSpace {
      get { return bicycleSpace_; }
      set {
        bicycleSpace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disabled_facilities" field.</summary>
    public const int DisabledFacilitiesFieldNumber = 28;
    private string disabledFacilities_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisabledFacilities {
      get { return disabledFacilities_; }
      set {
        disabledFacilities_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "morning_call" field.</summary>
    public const int MorningCallFieldNumber = 29;
    private string morningCall_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MorningCall {
      get { return morningCall_; }
      set {
        morningCall_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "help_url" field.</summary>
    public const int HelpUrlFieldNumber = 30;
    private string helpUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HelpUrl {
      get { return helpUrl_; }
      set {
        helpUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Service);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Service other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Price, other.Price)) return false;
      if (!object.Equals(AverageUnitPrice, other.AverageUnitPrice)) return false;
      if (!object.Equals(Available, other.Available)) return false;
      if (Code != other.Code) return false;
      if (Description != other.Description) return false;
      if (Detail != other.Detail) return false;
      if (FeaturePhoto != other.FeaturePhoto) return false;
      if (BookingCode != other.BookingCode) return false;
      if (BookingType != other.BookingType) return false;
      if (HasWifi != other.HasWifi) return false;
      if (HasPowerOutlet != other.HasPowerOutlet) return false;
      if (HasAirConditioning != other.HasAirConditioning) return false;
      if (HasEntertainmentSystem != other.HasEntertainmentSystem) return false;
      if (HasReadingLight != other.HasReadingLight) return false;
      if (SeatReservation != other.SeatReservation) return false;
      if (SeatType != other.SeatType) return false;
      if (NumberOfSeatsPerRow != other.NumberOfSeatsPerRow) return false;
      if (BedType != other.BedType) return false;
      if (ToiletType != other.ToiletType) return false;
      if (FoodServiceType != other.FoodServiceType) return false;
      if (FoodDrinks != other.FoodDrinks) return false;
      if (FreeMegazine != other.FreeMegazine) return false;
      if (CleaningKit != other.CleaningKit) return false;
      if (WelcomeKit != other.WelcomeKit) return false;
      if (LoungeService != other.LoungeService) return false;
      if (CheckIn != other.CheckIn) return false;
      if (SilentArea != other.SilentArea) return false;
      if (PrivateCabin != other.PrivateCabin) return false;
      if (PlayArea != other.PlayArea) return false;
      if (BicycleSpace != other.BicycleSpace) return false;
      if (DisabledFacilities != other.DisabledFacilities) return false;
      if (MorningCall != other.MorningCall) return false;
      if (HelpUrl != other.HelpUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (price_ != null) hash ^= Price.GetHashCode();
      if (averageUnitPrice_ != null) hash ^= AverageUnitPrice.GetHashCode();
      if (available_ != null) hash ^= Available.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Detail.Length != 0) hash ^= Detail.GetHashCode();
      if (FeaturePhoto.Length != 0) hash ^= FeaturePhoto.GetHashCode();
      if (BookingCode.Length != 0) hash ^= BookingCode.GetHashCode();
      if (BookingType.Length != 0) hash ^= BookingType.GetHashCode();
      if (HasWifi.Length != 0) hash ^= HasWifi.GetHashCode();
      if (HasPowerOutlet.Length != 0) hash ^= HasPowerOutlet.GetHashCode();
      if (HasAirConditioning.Length != 0) hash ^= HasAirConditioning.GetHashCode();
      if (HasEntertainmentSystem.Length != 0) hash ^= HasEntertainmentSystem.GetHashCode();
      if (HasReadingLight.Length != 0) hash ^= HasReadingLight.GetHashCode();
      if (SeatReservation.Length != 0) hash ^= SeatReservation.GetHashCode();
      if (SeatType.Length != 0) hash ^= SeatType.GetHashCode();
      if (NumberOfSeatsPerRow.Length != 0) hash ^= NumberOfSeatsPerRow.GetHashCode();
      if (BedType.Length != 0) hash ^= BedType.GetHashCode();
      if (ToiletType.Length != 0) hash ^= ToiletType.GetHashCode();
      if (FoodServiceType.Length != 0) hash ^= FoodServiceType.GetHashCode();
      if (FoodDrinks.Length != 0) hash ^= FoodDrinks.GetHashCode();
      if (FreeMegazine.Length != 0) hash ^= FreeMegazine.GetHashCode();
      if (CleaningKit.Length != 0) hash ^= CleaningKit.GetHashCode();
      if (WelcomeKit.Length != 0) hash ^= WelcomeKit.GetHashCode();
      if (LoungeService.Length != 0) hash ^= LoungeService.GetHashCode();
      if (CheckIn.Length != 0) hash ^= CheckIn.GetHashCode();
      if (SilentArea.Length != 0) hash ^= SilentArea.GetHashCode();
      if (PrivateCabin.Length != 0) hash ^= PrivateCabin.GetHashCode();
      if (PlayArea.Length != 0) hash ^= PlayArea.GetHashCode();
      if (BicycleSpace.Length != 0) hash ^= BicycleSpace.GetHashCode();
      if (DisabledFacilities.Length != 0) hash ^= DisabledFacilities.GetHashCode();
      if (MorningCall.Length != 0) hash ^= MorningCall.GetHashCode();
      if (HelpUrl.Length != 0) hash ^= HelpUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Detail.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Detail);
      }
      if (FeaturePhoto.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FeaturePhoto);
      }
      if (BookingCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BookingCode);
      }
      if (BookingType.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BookingType);
      }
      if (HasWifi.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(HasWifi);
      }
      if (HasPowerOutlet.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(HasPowerOutlet);
      }
      if (HasAirConditioning.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(HasAirConditioning);
      }
      if (HasEntertainmentSystem.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(HasEntertainmentSystem);
      }
      if (HasReadingLight.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(HasReadingLight);
      }
      if (SeatReservation.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(SeatReservation);
      }
      if (SeatType.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(SeatType);
      }
      if (NumberOfSeatsPerRow.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(NumberOfSeatsPerRow);
      }
      if (BedType.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BedType);
      }
      if (ToiletType.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(ToiletType);
      }
      if (FoodServiceType.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(FoodServiceType);
      }
      if (FoodDrinks.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(FoodDrinks);
      }
      if (FreeMegazine.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(FreeMegazine);
      }
      if (CleaningKit.Length != 0) {
        output.WriteRawTag(162, 1);
        output.WriteString(CleaningKit);
      }
      if (WelcomeKit.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(WelcomeKit);
      }
      if (LoungeService.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(LoungeService);
      }
      if (CheckIn.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(CheckIn);
      }
      if (SilentArea.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(SilentArea);
      }
      if (PrivateCabin.Length != 0) {
        output.WriteRawTag(202, 1);
        output.WriteString(PrivateCabin);
      }
      if (PlayArea.Length != 0) {
        output.WriteRawTag(210, 1);
        output.WriteString(PlayArea);
      }
      if (BicycleSpace.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(BicycleSpace);
      }
      if (DisabledFacilities.Length != 0) {
        output.WriteRawTag(226, 1);
        output.WriteString(DisabledFacilities);
      }
      if (MorningCall.Length != 0) {
        output.WriteRawTag(234, 1);
        output.WriteString(MorningCall);
      }
      if (HelpUrl.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteString(HelpUrl);
      }
      if (price_ != null) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(Price);
      }
      if (averageUnitPrice_ != null) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(AverageUnitPrice);
      }
      if (available_ != null) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(Available);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (price_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (averageUnitPrice_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AverageUnitPrice);
      }
      if (available_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Available);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Detail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Detail);
      }
      if (FeaturePhoto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FeaturePhoto);
      }
      if (BookingCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookingCode);
      }
      if (BookingType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BookingType);
      }
      if (HasWifi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HasWifi);
      }
      if (HasPowerOutlet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HasPowerOutlet);
      }
      if (HasAirConditioning.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HasAirConditioning);
      }
      if (HasEntertainmentSystem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HasEntertainmentSystem);
      }
      if (HasReadingLight.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HasReadingLight);
      }
      if (SeatReservation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatReservation);
      }
      if (SeatType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SeatType);
      }
      if (NumberOfSeatsPerRow.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NumberOfSeatsPerRow);
      }
      if (BedType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BedType);
      }
      if (ToiletType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ToiletType);
      }
      if (FoodServiceType.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FoodServiceType);
      }
      if (FoodDrinks.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FoodDrinks);
      }
      if (FreeMegazine.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(FreeMegazine);
      }
      if (CleaningKit.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CleaningKit);
      }
      if (WelcomeKit.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(WelcomeKit);
      }
      if (LoungeService.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LoungeService);
      }
      if (CheckIn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CheckIn);
      }
      if (SilentArea.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SilentArea);
      }
      if (PrivateCabin.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PrivateCabin);
      }
      if (PlayArea.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(PlayArea);
      }
      if (BicycleSpace.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(BicycleSpace);
      }
      if (DisabledFacilities.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(DisabledFacilities);
      }
      if (MorningCall.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(MorningCall);
      }
      if (HelpUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HelpUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Service other) {
      if (other == null) {
        return;
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::G2Rail.Protobuf.Price();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.averageUnitPrice_ != null) {
        if (averageUnitPrice_ == null) {
          AverageUnitPrice = new global::G2Rail.Protobuf.Price();
        }
        AverageUnitPrice.MergeFrom(other.AverageUnitPrice);
      }
      if (other.available_ != null) {
        if (available_ == null) {
          Available = new global::G2Rail.Protobuf.Availability();
        }
        Available.MergeFrom(other.Available);
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Detail.Length != 0) {
        Detail = other.Detail;
      }
      if (other.FeaturePhoto.Length != 0) {
        FeaturePhoto = other.FeaturePhoto;
      }
      if (other.BookingCode.Length != 0) {
        BookingCode = other.BookingCode;
      }
      if (other.BookingType.Length != 0) {
        BookingType = other.BookingType;
      }
      if (other.HasWifi.Length != 0) {
        HasWifi = other.HasWifi;
      }
      if (other.HasPowerOutlet.Length != 0) {
        HasPowerOutlet = other.HasPowerOutlet;
      }
      if (other.HasAirConditioning.Length != 0) {
        HasAirConditioning = other.HasAirConditioning;
      }
      if (other.HasEntertainmentSystem.Length != 0) {
        HasEntertainmentSystem = other.HasEntertainmentSystem;
      }
      if (other.HasReadingLight.Length != 0) {
        HasReadingLight = other.HasReadingLight;
      }
      if (other.SeatReservation.Length != 0) {
        SeatReservation = other.SeatReservation;
      }
      if (other.SeatType.Length != 0) {
        SeatType = other.SeatType;
      }
      if (other.NumberOfSeatsPerRow.Length != 0) {
        NumberOfSeatsPerRow = other.NumberOfSeatsPerRow;
      }
      if (other.BedType.Length != 0) {
        BedType = other.BedType;
      }
      if (other.ToiletType.Length != 0) {
        ToiletType = other.ToiletType;
      }
      if (other.FoodServiceType.Length != 0) {
        FoodServiceType = other.FoodServiceType;
      }
      if (other.FoodDrinks.Length != 0) {
        FoodDrinks = other.FoodDrinks;
      }
      if (other.FreeMegazine.Length != 0) {
        FreeMegazine = other.FreeMegazine;
      }
      if (other.CleaningKit.Length != 0) {
        CleaningKit = other.CleaningKit;
      }
      if (other.WelcomeKit.Length != 0) {
        WelcomeKit = other.WelcomeKit;
      }
      if (other.LoungeService.Length != 0) {
        LoungeService = other.LoungeService;
      }
      if (other.CheckIn.Length != 0) {
        CheckIn = other.CheckIn;
      }
      if (other.SilentArea.Length != 0) {
        SilentArea = other.SilentArea;
      }
      if (other.PrivateCabin.Length != 0) {
        PrivateCabin = other.PrivateCabin;
      }
      if (other.PlayArea.Length != 0) {
        PlayArea = other.PlayArea;
      }
      if (other.BicycleSpace.Length != 0) {
        BicycleSpace = other.BicycleSpace;
      }
      if (other.DisabledFacilities.Length != 0) {
        DisabledFacilities = other.DisabledFacilities;
      }
      if (other.MorningCall.Length != 0) {
        MorningCall = other.MorningCall;
      }
      if (other.HelpUrl.Length != 0) {
        HelpUrl = other.HelpUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Detail = input.ReadString();
            break;
          }
          case 34: {
            FeaturePhoto = input.ReadString();
            break;
          }
          case 42: {
            BookingCode = input.ReadString();
            break;
          }
          case 50: {
            BookingType = input.ReadString();
            break;
          }
          case 58: {
            HasWifi = input.ReadString();
            break;
          }
          case 66: {
            HasPowerOutlet = input.ReadString();
            break;
          }
          case 74: {
            HasAirConditioning = input.ReadString();
            break;
          }
          case 82: {
            HasEntertainmentSystem = input.ReadString();
            break;
          }
          case 90: {
            HasReadingLight = input.ReadString();
            break;
          }
          case 98: {
            SeatReservation = input.ReadString();
            break;
          }
          case 106: {
            SeatType = input.ReadString();
            break;
          }
          case 114: {
            NumberOfSeatsPerRow = input.ReadString();
            break;
          }
          case 122: {
            BedType = input.ReadString();
            break;
          }
          case 130: {
            ToiletType = input.ReadString();
            break;
          }
          case 138: {
            FoodServiceType = input.ReadString();
            break;
          }
          case 146: {
            FoodDrinks = input.ReadString();
            break;
          }
          case 154: {
            FreeMegazine = input.ReadString();
            break;
          }
          case 162: {
            CleaningKit = input.ReadString();
            break;
          }
          case 170: {
            WelcomeKit = input.ReadString();
            break;
          }
          case 178: {
            LoungeService = input.ReadString();
            break;
          }
          case 186: {
            CheckIn = input.ReadString();
            break;
          }
          case 194: {
            SilentArea = input.ReadString();
            break;
          }
          case 202: {
            PrivateCabin = input.ReadString();
            break;
          }
          case 210: {
            PlayArea = input.ReadString();
            break;
          }
          case 218: {
            BicycleSpace = input.ReadString();
            break;
          }
          case 226: {
            DisabledFacilities = input.ReadString();
            break;
          }
          case 234: {
            MorningCall = input.ReadString();
            break;
          }
          case 242: {
            HelpUrl = input.ReadString();
            break;
          }
          case 250: {
            if (price_ == null) {
              Price = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(Price);
            break;
          }
          case 258: {
            if (averageUnitPrice_ == null) {
              AverageUnitPrice = new global::G2Rail.Protobuf.Price();
            }
            input.ReadMessage(AverageUnitPrice);
            break;
          }
          case 266: {
            if (available_ == null) {
              Available = new global::G2Rail.Protobuf.Availability();
            }
            input.ReadMessage(Available);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Availability : pb::IMessage<Availability> {
    private static readonly pb::MessageParser<Availability> _parser = new pb::MessageParser<Availability>(() => new Availability());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Availability> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::G2Rail.Protobuf.OnlineSolutionsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability(Availability other) : this() {
      seats_ = other.seats_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Availability Clone() {
      return new Availability(this);
    }

    /// <summary>Field number for the "seats" field.</summary>
    public const int SeatsFieldNumber = 1;
    private uint seats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Seats {
      get { return seats_; }
      set {
        seats_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Availability);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Availability other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seats != other.Seats) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Seats != 0) hash ^= Seats.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Seats != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Seats);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Seats != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Seats);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Availability other) {
      if (other == null) {
        return;
      }
      if (other.Seats != 0) {
        Seats = other.Seats;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seats = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
