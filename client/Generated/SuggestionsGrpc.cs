// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Suggestions.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace G2Rail.Protobuf {
  /// <summary>
  /// Interface exported by the server, it allows query a station/city suggestion by a given query.
  /// </summary>
  public static partial class Suggestions
  {
    static readonly string __ServiceName = "g2rail.Suggestions";

    static readonly grpc::Marshaller<global::G2Rail.Protobuf.SuggestionRequest> __Marshaller_g2rail_SuggestionRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::G2Rail.Protobuf.SuggestionRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::G2Rail.Protobuf.SuggestionsResponse> __Marshaller_g2rail_SuggestionsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::G2Rail.Protobuf.SuggestionsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::G2Rail.Protobuf.SuggestionRequest, global::G2Rail.Protobuf.SuggestionsResponse> __Method_Query = new grpc::Method<global::G2Rail.Protobuf.SuggestionRequest, global::G2Rail.Protobuf.SuggestionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Query",
        __Marshaller_g2rail_SuggestionRequest,
        __Marshaller_g2rail_SuggestionsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::G2Rail.Protobuf.SuggestionsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for Suggestions</summary>
    public partial class SuggestionsClient : grpc::ClientBase<SuggestionsClient>
    {
      /// <summary>Creates a new client for Suggestions</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public SuggestionsClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Suggestions that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public SuggestionsClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected SuggestionsClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected SuggestionsClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Send a suggestion query request
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::G2Rail.Protobuf.SuggestionsResponse Query(global::G2Rail.Protobuf.SuggestionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Query(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send a suggestion query request
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::G2Rail.Protobuf.SuggestionsResponse Query(global::G2Rail.Protobuf.SuggestionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Query, null, options, request);
      }
      /// <summary>
      /// Send a suggestion query request
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::G2Rail.Protobuf.SuggestionsResponse> QueryAsync(global::G2Rail.Protobuf.SuggestionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send a suggestion query request
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::G2Rail.Protobuf.SuggestionsResponse> QueryAsync(global::G2Rail.Protobuf.SuggestionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Query, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override SuggestionsClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SuggestionsClient(configuration);
      }
    }

  }
}
#endregion
