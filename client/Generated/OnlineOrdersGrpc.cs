// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/OnlineOrders.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace G2Rail.Protobuf {
  /// <summary>
  /// Interface exported by the server.
  /// </summary>
  public static partial class OnlineOrders
  {
    static readonly string __ServiceName = "g2rail.OnlineOrders";

    static readonly grpc::Marshaller<global::G2Rail.Protobuf.BookRequest> __Marshaller_g2rail_BookRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::G2Rail.Protobuf.BookRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::G2Rail.Protobuf.AsyncKeyResponse> __Marshaller_g2rail_AsyncKeyResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::G2Rail.Protobuf.AsyncKeyResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest> __Marshaller_g2rail_OnlineOrderAsyncQueryRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::G2Rail.Protobuf.OnlineOrderResponse> __Marshaller_g2rail_OnlineOrderResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::G2Rail.Protobuf.OnlineOrderResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::G2Rail.Protobuf.BookRequest, global::G2Rail.Protobuf.AsyncKeyResponse> __Method_Book = new grpc::Method<global::G2Rail.Protobuf.BookRequest, global::G2Rail.Protobuf.AsyncKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Book",
        __Marshaller_g2rail_BookRequest,
        __Marshaller_g2rail_AsyncKeyResponse);

    static readonly grpc::Method<global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest, global::G2Rail.Protobuf.OnlineOrderResponse> __Method_QueryAsyncOnlineOrder = new grpc::Method<global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest, global::G2Rail.Protobuf.OnlineOrderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "QueryAsyncOnlineOrder",
        __Marshaller_g2rail_OnlineOrderAsyncQueryRequest,
        __Marshaller_g2rail_OnlineOrderResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::G2Rail.Protobuf.OnlineOrdersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for OnlineOrders</summary>
    public partial class OnlineOrdersClient : grpc::ClientBase<OnlineOrdersClient>
    {
      /// <summary>Creates a new client for OnlineOrders</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public OnlineOrdersClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for OnlineOrders that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public OnlineOrdersClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected OnlineOrdersClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected OnlineOrdersClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Send a search request
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::G2Rail.Protobuf.AsyncKeyResponse Book(global::G2Rail.Protobuf.BookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Book(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send a search request
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::G2Rail.Protobuf.AsyncKeyResponse Book(global::G2Rail.Protobuf.BookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Book, null, options, request);
      }
      /// <summary>
      /// Send a search request
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::G2Rail.Protobuf.AsyncKeyResponse> BookAsync(global::G2Rail.Protobuf.BookRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BookAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send a search request
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::G2Rail.Protobuf.AsyncKeyResponse> BookAsync(global::G2Rail.Protobuf.BookRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Book, null, options, request);
      }
      /// <summary>
      /// Service to query async result by using the async key
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::G2Rail.Protobuf.OnlineOrderResponse QueryAsyncOnlineOrder(global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryAsyncOnlineOrder(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Service to query async result by using the async key
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::G2Rail.Protobuf.OnlineOrderResponse QueryAsyncOnlineOrder(global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_QueryAsyncOnlineOrder, null, options, request);
      }
      /// <summary>
      /// Service to query async result by using the async key
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::G2Rail.Protobuf.OnlineOrderResponse> QueryAsyncOnlineOrderAsync(global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return QueryAsyncOnlineOrderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Service to query async result by using the async key
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::G2Rail.Protobuf.OnlineOrderResponse> QueryAsyncOnlineOrderAsync(global::G2Rail.Protobuf.OnlineOrderAsyncQueryRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_QueryAsyncOnlineOrder, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override OnlineOrdersClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new OnlineOrdersClient(configuration);
      }
    }

  }
}
#endregion
